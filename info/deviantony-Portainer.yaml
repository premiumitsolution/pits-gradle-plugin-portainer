swagger: "2.0"
info:
  description: |
    Portainer API is an HTTP API served by Portainer. It is used by the Portainer UI and everything you can do with the UI can be done using the HTTP API.
    Examples are available at https://gist.github.com/deviantony/77026d402366b4b43fa5918d41bc42f8
    You can find out more about Portainer at [http://portainer.io](http://portainer.io) and get some support on [Slack](http://portainer.io/slack/).

    # Authentication

    Most of the API endpoints require to be authenticated as well as some level of authorization to be used.
    Portainer API uses JSON Web Token to manage authentication and thus requires you to provide a token in the **Authorization** header of each request
    with the **Bearer** authentication mechanism.

    Example:

    ```
    Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE
    ```

    # Security

    Each API endpoint has an associated access policy, it is documented in the description of each endpoint.

    Different access policies are available:

    - Public access
    - Authenticated access
    - Restricted access
    - Administrator access

    ### Public access

    No authentication is required to access the endpoints with this access policy.

    ### Authenticated access

    Authentication is required to access the endpoints with this access policy.

    ### Restricted access

    Authentication is required to access the endpoints with this access policy.
    Extra-checks might be added to ensure access to the resource is granted. Returned data might also be filtered.

    ### Administrator access

    Authentication as well as an administrator role are required to access the endpoints with this access policy.

    # Execute Docker requests

    Portainer **DO NOT** expose specific endpoints to manage your Docker resources (create a container, remove a volume, etc...).

    Instead, it acts as a reverse-proxy to the Docker HTTP API. This means that you can execute Docker requests **via** the Portainer HTTP API.

    To do so, you can use the `/endpoints/{id}/docker` Portainer API endpoint (which is not documented below due to Swagger limitations). This endpoint has a restricted access policy so you still need to be authenticated to be able to query this endpoint. Any query on this endpoint will be proxied to the Docker API of the associated endpoint (requests and responses objects are the same as documented in the Docker API).

    **NOTE**: You can find more information on how to query the Docker API in the [Docker official documentation](https://docs.docker.com/engine/api/v1.30/) as well as in [this Portainer example](https://gist.github.com/deviantony/77026d402366b4b43fa5918d41bc42f8).
  version: 2.0.1
  title: PortainerCE API
  contact:
    email: info@portainer.io
  license: { }
basePath: /api
tags:
  - name: auth
    description: Authenticate against Portainer HTTP API
  - name: custom_templates
    description: Manage Custom Templates
  - name: dockerhub
    description: Manage how Portainer connects to the DockerHub
  - name: edge_groups
    description: Manage Edge Groups
  - name: edge_jobs
    description: Manage Edge Jobs
  - name: edge_stacks
    description: Manage Edge Stacks
  - name: edge_templates
    description: Manage Edge Templates
  - name: edge
    description: Manage Edge related endpoint settings
  - name: endpoints
    description: Manage Docker environments
  - name: endpoint_groups
    description: Manage endpoint groups
  - name: motd
    description: Fetch the message of the day
  - name: registries
    description: Manage Docker registries
  - name: resource_controls
    description: Manage access control on Docker resources
  - name: roles
    description: Manage roles
  - name: settings
    description: Manage Portainer settings
  - name: status
    description: Information about the Portainer instance
  - name: stacks
    description: Manage Docker stacks
  - name: users
    description: Manage users
  - name: tags
    description: Manage tags
  - name: teams
    description: Manage teams
  - name: team_memberships
    description: Manage team memberships
  - name: templates
    description: Manage App Templates
  - name: stacks
    description: Manage stacks
  - name: upload
    description: Upload files
  - name: webhooks
    description: Manage webhooks
  - name: websocket
    description: Create exec sessions using websockets
schemes:
  - http
  - https
paths:
  /auth:
    post:
      tags:
        - auth
      summary: Authenticate
      description: Use this endpoint to authenticate against Portainer using a username and password.
      operationId: AuthenticateUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Credentials used for authentication
          required: true
          schema:
            $ref: '#/definitions/auth.authenticatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/auth.authenticateResponse'
        "400":
          description: Invalid request
        "422":
          description: Invalid Credentials
        "500":
          description: Server error
  /auth/logout:
    post:
      tags:
        - auth
      summary: Logout
      operationId: logout
      consumes:
        - application/json
      produces:
        - application/json
      parameters: [ ]
      responses:
        "204":
          description: ""
      security:
        - jwt: [ ]
  /auth/oauth/validate:
    post:
      tags:
        - auth
      summary: Authenticate with OAuth
      operationId: authenticate_oauth
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: OAuth Credentials used for authentication
          required: true
          schema:
            $ref: '#/definitions/auth.oauthPayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/auth.authenticateResponse'
        "400":
          description: Invalid request
        "422":
          description: Invalid Credentials
        "500":
          description: Server error
  /custom_templates:
    get:
      tags:
        - custom_templates
      summary: List available custom templates
      description: |-
        List available custom templates.
        **Access policy**: authenticated
      operationId: CustomTemplateList
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/portainer.CustomTemplate'
        "500":
          description: Server error
      security:
        - jwt: [ ]
    post:
      tags:
        - custom_templates
      summary: Create a custom template
      description: |-
        Create a custom template.
        **Access policy**: authenticated
      operationId: CustomTemplateCreate
      consumes:
        - application/json
        - ' multipart/form-data'
      produces:
        - application/json
      parameters:
        - name: method
          in: query
          description: method for creating template
          required: true
          type: string
          enum:
            - string
            - file
            - repository
        - in: body
          name: body_string
          description: Required when using method=string
          required: false
          schema:
            $ref: '#/definitions/customtemplates.customTemplateFromFileContentPayload'
        - in: body
          name: body_repository
          description: Required when using method=repository
          required: false
          schema:
            $ref: '#/definitions/customtemplates.customTemplateFromGitRepositoryPayload'
        - name: Title
          in: formData
          description: Title of the template. required when method is file
          required: false
          type: string
        - name: Description
          in: formData
          description: Description of the template. required when method is file
          required: false
          type: string
        - name: Note
          in: formData
          description: A note that will be displayed in the UI. Supports HTML content
          required: false
          type: string
        - name: Platform
          in: formData
          description: Platform associated to the template (1 - 'linux', 2 - 'windows'). required when method is file
          required: false
          type: integer
          enum:
            - 1
            - 2
        - name: Type
          in: formData
          description: Type of created stack (1 - swarm, 2 - compose), required when method is file
          required: false
          type: integer
          enum:
            - 1
            - 2
        - name: file
          in: formData
          description: required when method is file
          required: false
          type: file
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.CustomTemplate'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /custom_templates/{id}:
    get:
      tags:
        - custom_templates
      summary: Inspect a custom template
      description: |-
        Retrieve details about a template.
        **Access policy**: authenticated
      operationId: CustomTemplateInspect
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Template identifier
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.CustomTemplate'
        "400":
          description: Invalid request
        "404":
          description: Template not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
    put:
      tags:
        - custom_templates
      summary: Update a template
      description: |-
        Update a template.
        **Access policy**: authenticated
      operationId: CustomTemplateUpdate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Template identifier
          required: true
          type: integer
        - in: body
          name: body
          description: Template details
          required: true
          schema:
            $ref: '#/definitions/customtemplates.customTemplateUpdatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.CustomTemplate'
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access template
        "404":
          description: Template not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
    delete:
      tags:
        - custom_templates
      summary: Remove a template
      description: |-
        Remove a template.
        **Access policy**: authorized
      operationId: CustomTemplateDelete
      parameters:
        - name: id
          in: path
          description: Template identifier
          required: true
          type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Access denied to resource
        "404":
          description: Template not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /custom_templates/{id}/file:
    get:
      tags:
        - custom_templates
      summary: Get Template stack file content.
      description: |-
        Retrieve the content of the Stack file for the specified custom template
        **Access policy**: authorized
      operationId: CustomTemplateFile
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Template identifier
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/customtemplates.fileResponse'
        "400":
          description: Invalid request
        "404":
          description: Custom template not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /dockerhub:
    get:
      tags:
        - dockerhub
      summary: Retrieve DockerHub information
      description: |-
        Use this endpoint to retrieve the information used to connect to the DockerHub
        **Access policy**: authenticated
      operationId: DockerHubInspect
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.DockerHub'
        "500":
          description: Server error
      security:
        - jwt: [ ]
    put:
      tags:
        - dockerhub
      summary: Update DockerHub information
      description: |-
        Use this endpoint to update the information used to connect to the DockerHub
        **Access policy**: administrator
      operationId: DockerHubUpdate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: DockerHub information
          required: true
          schema:
            $ref: '#/definitions/dockerhub.dockerhubUpdatePayload'
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /edge_groups:
    get:
      tags:
        - edge_groups
      summary: list EdgeGroups
      consumes:
        - application/json
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: EdgeGroups
          schema:
            type: array
            items:
              type: object
              allOf:
                - $ref: '#/definitions/portainer.EdgeGroup'
                - type: object
                  properties:
                    HasEdgeStack:
                      type: boolean
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
    post:
      tags:
        - edge_groups
      summary: Create an EdgeGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: EdgeGroup data
          required: true
          schema:
            $ref: '#/definitions/edgegroups.edgeGroupCreatePayload'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeGroup'
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
  /edge_groups/{id}:
    get:
      tags:
        - edge_groups
      summary: Inspects an EdgeGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EdgeGroup Id
          required: true
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeGroup'
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
    put:
      tags:
        - edge_groups
      summary: Updates an EdgeGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EdgeGroup Id
          required: true
          type: integer
        - in: body
          name: body
          description: EdgeGroup data
          required: true
          schema:
            $ref: '#/definitions/edgegroups.edgeGroupUpdatePayload'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeGroup'
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
    delete:
      tags:
        - edge_groups
      summary: Deletes an EdgeGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EdgeGroup Id
          required: true
          type: integer
      responses:
        "204":
          description: ""
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
  /edge_jobs:
    get:
      tags:
        - edge_jobs
      summary: Fetch EdgeJobs list
      consumes:
        - application/json
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/portainer.EdgeJob'
        "400":
          description: ""
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
    post:
      tags:
        - edge_jobs
      summary: Create an EdgeJob
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: method
          in: query
          description: Creation Method
          required: true
          type: string
          enum:
            - file
            - string
        - in: body
          name: body
          description: EdgeGroup data when method is string
          required: true
          schema:
            $ref: '#/definitions/edgejobs.edgeJobCreateFromFileContentPayload'
        - in: body
          name: body
          description: EdgeGroup data when method is file
          required: true
          schema:
            $ref: '#/definitions/edgejobs.edgeJobCreateFromFilePayload'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeGroup'
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
  /edge_jobs/{id}:
    get:
      tags:
        - edge_jobs
      summary: Inspect an EdgeJob
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EdgeJob Id
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeJob'
        "400":
          description: ""
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
    post:
      tags:
        - edge_jobs
      summary: Update an EdgeJob
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EdgeJob Id
          required: true
          type: string
        - in: body
          name: body
          description: EdgeGroup data
          required: true
          schema:
            $ref: '#/definitions/edgejobs.edgeJobUpdatePayload'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeJob'
        "400":
          description: ""
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
    delete:
      tags:
        - edge_jobs
      summary: Delete an EdgeJob
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EdgeJob Id
          required: true
          type: string
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
  /edge_jobs/{id}/file:
    get:
      tags:
        - edge_jobs
      summary: Fetch a file of an EdgeJob
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EdgeJob Id
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/edgejobs.edgeJobFileResponse'
        "400":
          description: ""
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
  /edge_jobs/{id}/tasks:
    get:
      tags:
        - edge_jobs
      summary: Fetch the list of tasks on an EdgeJob
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EdgeJob Id
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/edgejobs.taskContainer'
        "400":
          description: ""
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
  /edge_jobs/{id}/tasks/{taskID}/logs:
    get:
      tags:
        - edge_jobs
      summary: Fetch the log for a specifc task on an EdgeJob
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EdgeJob Id
          required: true
          type: string
        - name: taskID
          in: path
          description: Task Id
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/edgejobs.fileResponse'
        "400":
          description: ""
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
    post:
      tags:
        - edge_jobs
      summary: Collect the log for a specifc task on an EdgeJob
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EdgeJob Id
          required: true
          type: string
        - name: taskID
          in: path
          description: Task Id
          required: true
          type: string
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
    delete:
      tags:
        - edge_jobs
      summary: Clear the log for a specifc task on an EdgeJob
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EdgeJob Id
          required: true
          type: string
        - name: taskID
          in: path
          description: Task Id
          required: true
          type: string
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
  /edge_stacks:
    get:
      tags:
        - edge_stacks
      summary: Fetches the list of EdgeStacks
      consumes:
        - application/json
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/portainer.EdgeStack'
        "400":
          description: ""
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
    post:
      tags:
        - edge_stacks
      summary: Create an EdgeStack
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: method
          in: query
          description: Creation Method
          required: true
          type: string
          enum:
            - file
            - string
            - repository
        - in: body
          name: body_string
          description: Required when using method=string
          required: true
          schema:
            $ref: '#/definitions/edgestacks.swarmStackFromFileContentPayload'
        - in: body
          name: body_file
          description: Required when using method=file
          required: true
          schema:
            $ref: '#/definitions/edgestacks.swarmStackFromFileUploadPayload'
        - in: body
          name: body_repository
          description: Required when using method=repository
          required: true
          schema:
            $ref: '#/definitions/edgestacks.swarmStackFromGitRepositoryPayload'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeStack'
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
  /edge_stacks/{id}:
    get:
      tags:
        - edge_stacks
      summary: Inspect an EdgeStack
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EdgeStack Id
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeStack'
        "400":
          description: ""
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
    put:
      tags:
        - edge_stacks
      summary: Update an EdgeStack
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EdgeStack Id
          required: true
          type: string
        - in: body
          name: body
          description: EdgeStack data
          required: true
          schema:
            $ref: '#/definitions/edgestacks.updateEdgeStackPayload'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeStack'
        "400":
          description: ""
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
    delete:
      tags:
        - edge_stacks
      summary: Delete an EdgeStack
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EdgeStack Id
          required: true
          type: string
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
  /edge_stacks/{id}/file:
    get:
      tags:
        - edge_stacks
      summary: Fetches the stack file for an EdgeStack
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EdgeStack Id
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/edgestacks.stackFileResponse'
        "400":
          description: ""
        "500":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            type: Edge
      security:
        - jwt: [ ]
  /edge_stacks/{id}/status:
    put:
      tags:
        - edge_stacks
      summary: Update an EdgeStack status
      description: Authorized only if the request is done by an Edge Endpoint
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EdgeStack Id
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeStack'
        "400":
          description: ""
        "403":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
  /edge_templates:
    get:
      tags:
        - edge_templates
      summary: Fetches the list of Edge Templates
      consumes:
        - application/json
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/portainer.Template'
        "500":
          description: ""
      security:
        - jwt: [ ]
  /endpoint_groups:
    get:
      tags:
        - endpoint_groups
      summary: List Endpoint groups
      description: |-
        List all endpoint groups based on the current user authorizations. Will
        return all endpoint groups if using an administrator account otherwise it will
        only return authorized endpoint groups.
        **Access policy**: restricted
      operationId: EndpointGroupList
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: Endpoint group
          schema:
            type: array
            items:
              $ref: '#/definitions/portainer.EndpointGroup'
        "500":
          description: Server error
      security:
        - jwt: [ ]
    post:
      tags:
        - endpoint_groups
      summary: Create an Endpoint Group
      description: |-
        Create a new endpoint group.
        **Access policy**: administrator
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Endpoint Group details
          required: true
          schema:
            $ref: '#/definitions/endpointgroups.endpointGroupCreatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.EndpointGroup'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /endpoint_groups/:id:
    get:
      tags:
        - endpoint_groups
      summary: Inspect an Endpoint group
      description: |-
        Retrieve details abont an endpoint group.
        **Access policy**: administrator
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Endpoint group identifier
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.EndpointGroup'
        "400":
          description: Invalid request
        "404":
          description: EndpointGroup not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
    put:
      tags:
        - endpoint_groups
      summary: Update an endpoint group
      description: |-
        Update an endpoint group.
        **Access policy**: administrator
      operationId: EndpointGroupUpdate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EndpointGroup identifier
          required: true
          type: integer
        - in: body
          name: body
          description: EndpointGroup details
          required: true
          schema:
            $ref: '#/definitions/endpointgroups.endpointGroupUpdatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.EndpointGroup'
        "400":
          description: Invalid request
        "404":
          description: EndpointGroup not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /endpoint_groups/{id}:
    delete:
      tags:
        - endpoint_groups
      summary: Remove an endpoint group
      description: |-
        Remove an endpoint group.
        **Access policy**: administrator
      operationId: EndpointGroupDelete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: EndpointGroup identifier
          required: true
          type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "404":
          description: EndpointGroup not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /endpoint_groups/{id}/endpoints/{endpointId}:
    put:
      tags:
        - endpoint_groups
      summary: Add an endpoint to an endpoint group
      description: |-
        Add an endpoint to an endpoint group
        **Access policy**: administrator
      operationId: EndpointGroupAddEndpoint
      parameters:
        - name: id
          in: path
          description: EndpointGroup identifier
          required: true
          type: integer
        - name: endpointId
          in: path
          description: Endpoint identifier
          required: true
          type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "404":
          description: EndpointGroup not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
    delete:
      tags:
        - endpoint_groups
      summary: Removes endpoint from an endpoint group
      description: '**Access policy**: administrator'
      operationId: EndpointGroupDeleteEndpoint
      parameters:
        - name: id
          in: path
          description: EndpointGroup identifier
          required: true
          type: integer
        - name: endpointId
          in: path
          description: Endpoint identifier
          required: true
          type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "404":
          description: EndpointGroup not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /endpoints:
    get:
      tags:
        - endpoints
      summary: List endpoints
      description: |-
        List all endpoints based on the current user authorizations. Will
        return all endpoints if using an administrator account otherwise it will
        only return authorized endpoints.
        **Access policy**: restricted
      operationId: EndpointList
      produces:
        - application/json
      parameters:
        - name: start
          in: query
          description: Start searching from
          required: false
          type: integer
        - name: search
          in: query
          description: Search query
          required: false
          type: string
        - name: groupId
          in: query
          description: List endpoints of this group
          required: false
          type: integer
        - name: limit
          in: query
          description: Limit results to this value
          required: false
          type: integer
        - name: type
          in: query
          description: List endpoints of this type
          required: false
          type: integer
        - name: tagIds
          in: query
          description: search endpoints with these tags (depends on tagsPartialMatch)
          required: false
          type: array
          items:
            type: integer
          collectionFormat: multi
        - name: tagsPartialMatch
          in: query
          description: If true, will return endpoint which has one of tagIds, if false (or missing) will return only endpoints that has all the tags
          required: false
          type: boolean
        - name: endpointIds
          in: query
          description: will return only these endpoints
          required: false
          type: array
          items:
            type: integer
          collectionFormat: multi
      responses:
        "200":
          description: Endpoints
          schema:
            type: array
            items:
              $ref: '#/definitions/portainer.Endpoint'
        "500":
          description: Internal Server Error
          schema:
            type: Server
      security:
        - jwt: [ ]
    post:
      tags:
        - endpoints
      summary: Create a new endpoint
      description: |-
        Create a new endpoint that will be used to manage an environment.
        **Access policy**: administrator
      operationId: EndpointCreate
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: Name
          in: formData
          description: 'Name that will be used to identify this endpoint (example: my-endpoint)'
          required: true
          type: string
        - name: EndpointType
          in: formData
          description: 'Environment type. Value must be one of: 1 (Local Docker environment), 2 (Agent environment), 3 (Azure environment), 4 (Edge agent environment) or 5 (Local Kubernetes Environment'
          required: true
          type: integer
        - name: URL
          in: formData
          description: 'URL or IP address of a Docker host (example: docker.mydomain.tld:2375). Defaults to local if not specified (Linux: /var/run/docker.sock, Windows: //./pipe/docker_engine)'
          required: false
          type: string
        - name: PublicURL
          in: formData
          description: 'URL or IP address where exposed containers will be reachable. Defaults to URL if not specified (example: docker.mydomain.tld:2375)'
          required: false
          type: string
        - name: GroupID
          in: formData
          description: Endpoint group identifier. If not specified will default to 1 (unassigned).
          required: false
          type: integer
        - name: TLS
          in: formData
          description: Require TLS to connect against this endpoint
          required: false
          type: boolean
        - name: TLSSkipVerify
          in: formData
          description: Skip server verification when using TLS
          required: false
          type: boolean
        - name: TLSSkipClientVerify
          in: formData
          description: Skip client verification when using TLS
          required: false
          type: boolean
        - name: TLSCACertFile
          in: formData
          description: TLS CA certificate file
          required: false
          type: file
        - name: TLSCertFile
          in: formData
          description: TLS client certificate file
          required: false
          type: file
        - name: TLSKeyFile
          in: formData
          description: TLS client key file
          required: false
          type: file
        - name: AzureApplicationID
          in: formData
          description: Azure application ID. Required if endpoint type is set to 3
          required: false
          type: string
        - name: AzureTenantID
          in: formData
          description: Azure tenant ID. Required if endpoint type is set to 3
          required: false
          type: string
        - name: AzureAuthenticationKey
          in: formData
          description: Azure authentication key. Required if endpoint type is set to 3
          required: false
          type: string
        - name: TagIDs
          in: formData
          description: List of tag identifiers to which this endpoint is associated
          required: false
          type: array
          items:
            type: integer
          collectionFormat: multi
        - name: EdgeCheckinInterval
          in: formData
          description: The check in interval for edge agent (in seconds)
          required: false
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Endpoint'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /endpoints/{id}:
    get:
      tags:
        - endpoints
      summary: Inspect an endpoint
      description: |-
        Retrieve details about an endpoint.
        **Access policy**: restricted
      operationId: EndpointInspect
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Endpoint identifier
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Endpoint'
        "400":
          description: Invalid request
        "404":
          description: Endpoint not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
    put:
      tags:
        - endpoints
      summary: Update an endpoint
      description: |-
        Update an endpoint.
        **Access policy**: administrator
      operationId: EndpointUpdate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Endpoint identifier
          required: true
          type: integer
        - in: body
          name: body
          description: Endpoint details
          required: true
          schema:
            $ref: '#/definitions/endpoints.endpointUpdatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Endpoint'
        "400":
          description: Invalid request
        "404":
          description: Endpoint not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
    delete:
      tags:
        - endpoints
      summary: Remove an endpoint
      description: |-
        Remove an endpoint.
        **Access policy**: administrator
      operationId: EndpointDelete
      parameters:
        - name: id
          in: path
          description: Endpoint identifier
          required: true
          type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "404":
          description: Endpoint not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /endpoints/{id}/edge/jobs/{jobID}/logs:
    post:
      tags:
        - edge
        - endpoints
      summary: Inspect an EdgeJob Log
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Endpoint Id
          required: true
          type: string
        - name: jobID
          in: path
          description: Job Id
          required: true
          type: string
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
  /endpoints/{id}/edge/stacks/{stackId}:
    get:
      tags:
        - edge
        - endpoints
        - edge_stacks
      summary: Inspect an Edge Stack for an Endpoint
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Endpoint Id
          required: true
          type: string
        - name: stackID
          in: path
          description: EdgeStack Id
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpointedge.configResponse'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
  /endpoints/{id}/snapshot:
    post:
      tags:
        - endpoints
      summary: Snapshots an endpoint
      description: |-
        Snapshots an endpoint
        **Access policy**: restricted
      operationId: EndpointSnapshot
      parameters:
        - name: id
          in: path
          description: Endpoint identifier
          required: true
          type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "404":
          description: Endpoint not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /endpoints/{id}/status:
    get:
      tags:
        - endpoints
      summary: Get endpoint status
      description: |-
        Endpoint for edge agent to check status of environment
        **Access policy**: restricted only to Edge endpoints
      operationId: EndpointStatusInspect
      parameters:
        - name: id
          in: path
          description: Endpoint identifier
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/endpoints.endpointStatusInspectResponse'
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access endpoint
        "404":
          description: Endpoint not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /endpoints/snapshot:
    post:
      tags:
        - endpoints
      summary: Snapshot all endpoints
      description: |-
        Snapshot all endpoints
        **Access policy**: administrator
      operationId: EndpointSnapshots
      parameters: [ ]
      responses:
        "204":
          description: Success
        "500":
          description: Server Error
      security:
        - jwt: [ ]

  /endpoints/{id}/docker/containers/json:
    get:
      summary: "List containers"
      description: |
        Returns a list of containers. For details on the format, see the
        [inspect endpoint](#operation/ContainerInspect).

        Note that it uses a different, smaller representation of a container
        than inspecting a single container. For example, the list of linked
        containers is not propagated .
      operationId: "EndpointContainerList"
      produces:
        - "application/json"
      security:
        - jwt: []
      parameters:
        - name: "id"
          in: "path"
          description: "Endpoint identifier"
          required: true
          type: "integer"
        - name: "all"
          in: "query"
          description: |
            Return all containers. By default, only running containers are shown.
          type: "boolean"
          default: false
        - name: "limit"
          in: "query"
          description: |
            Return this number of most recently created containers, including
            non-running ones.
          type: "integer"
        - name: "size"
          in: "query"
          description: |
            Return the size of container as fields `SizeRw` and `SizeRootFs`.
          type: "boolean"
          default: false
        - name: "filters"
          in: "query"
          description: |
            Filters to process on the container list, encoded as JSON (a
            `map[string][]string`). For example, `{"status": ["paused"]}` will
            only return paused containers.

            Available filters:

            - `ancestor`=(`<image-name>[:<tag>]`, `<image id>`, or `<image@digest>`)
            - `before`=(`<container id>` or `<container name>`)
            - `expose`=(`<port>[/<proto>]`|`<startport-endport>/[<proto>]`)
            - `exited=<int>` containers with exit code of `<int>`
            - `health`=(`starting`|`healthy`|`unhealthy`|`none`)
            - `id=<ID>` a container's ID
            - `isolation=`(`default`|`process`|`hyperv`) (Windows daemon only)
            - `is-task=`(`true`|`false`)
            - `label=key` or `label="key=value"` of a container label
            - `name=<name>` a container's name
            - `network`=(`<network id>` or `<network name>`)
            - `publish`=(`<port>[/<proto>]`|`<startport-endport>/[<proto>]`)
            - `since`=(`<container id>` or `<container name>`)
            - `status=`(`created`|`restarting`|`running`|`removing`|`paused`|`exited`|`dead`)
            - `volume`=(`<volume name>` or `<mount point destination>`)
          type: "string"
      responses:
        200:
          description: "no error"
          schema:
            type: array
            items:
              $ref: "#/definitions/ContainerSummary"
          examples:
            application/json:
              - Id: "8dfafdbc3a40"
                Names:
                  - "/boring_feynman"
                Image: "ubuntu:latest"
                ImageID: "d74508fb6632491cea586a1fd7d748dfc5274cd6fdfedee309ecdcbc2bf5cb82"
                Command: "echo 1"
                Created: 1367854155
                State: "Exited"
                Status: "Exit 0"
                Ports:
                  - PrivatePort: 2222
                    PublicPort: 3333
                    Type: "tcp"
                Labels:
                  com.example.vendor: "Acme"
                  com.example.license: "GPL"
                  com.example.version: "1.0"
                SizeRw: 12288
                SizeRootFs: 0
                HostConfig:
                  NetworkMode: "default"
                NetworkSettings:
                  Networks:
                    bridge:
                      NetworkID: "7ea29fc1412292a2d7bba362f9253545fecdfa8ce9a6e37dd10ba8bee7129812"
                      EndpointID: "2cdc4edb1ded3631c81f57966563e5c8525b81121bb3706a9a9a3ae102711f3f"
                      Gateway: "172.17.0.1"
                      IPAddress: "172.17.0.2"
                      IPPrefixLen: 16
                      IPv6Gateway: ""
                      GlobalIPv6Address: ""
                      GlobalIPv6PrefixLen: 0
                      MacAddress: "02:42:ac:11:00:02"
                Mounts:
                  - Name: "fac362...80535"
                    Source: "/data"
                    Destination: "/data"
                    Driver: "local"
                    Mode: "ro,Z"
                    RW: false
                    Propagation: ""
              - Id: "9cd87474be90"
                Names:
                  - "/coolName"
                Image: "ubuntu:latest"
                ImageID: "d74508fb6632491cea586a1fd7d748dfc5274cd6fdfedee309ecdcbc2bf5cb82"
                Command: "echo 222222"
                Created: 1367854155
                State: "Exited"
                Status: "Exit 0"
                Ports: [ ]
                Labels: { }
                SizeRw: 12288
                SizeRootFs: 0
                HostConfig:
                  NetworkMode: "default"
                NetworkSettings:
                  Networks:
                    bridge:
                      NetworkID: "7ea29fc1412292a2d7bba362f9253545fecdfa8ce9a6e37dd10ba8bee7129812"
                      EndpointID: "88eaed7b37b38c2a3f0c4bc796494fdf51b270c2d22656412a2ca5d559a64d7a"
                      Gateway: "172.17.0.1"
                      IPAddress: "172.17.0.8"
                      IPPrefixLen: 16
                      IPv6Gateway: ""
                      GlobalIPv6Address: ""
                      GlobalIPv6PrefixLen: 0
                      MacAddress: "02:42:ac:11:00:08"
                Mounts: [ ]
              - Id: "3176a2479c92"
                Names:
                  - "/sleepy_dog"
                Image: "ubuntu:latest"
                ImageID: "d74508fb6632491cea586a1fd7d748dfc5274cd6fdfedee309ecdcbc2bf5cb82"
                Command: "echo 3333333333333333"
                Created: 1367854154
                State: "Exited"
                Status: "Exit 0"
                Ports: [ ]
                Labels: { }
                SizeRw: 12288
                SizeRootFs: 0
                HostConfig:
                  NetworkMode: "default"
                NetworkSettings:
                  Networks:
                    bridge:
                      NetworkID: "7ea29fc1412292a2d7bba362f9253545fecdfa8ce9a6e37dd10ba8bee7129812"
                      EndpointID: "8b27c041c30326d59cd6e6f510d4f8d1d570a228466f956edf7815508f78e30d"
                      Gateway: "172.17.0.1"
                      IPAddress: "172.17.0.6"
                      IPPrefixLen: 16
                      IPv6Gateway: ""
                      GlobalIPv6Address: ""
                      GlobalIPv6PrefixLen: 0
                      MacAddress: "02:42:ac:11:00:06"
                Mounts: [ ]
              - Id: "4cb07b47f9fb"
                Names:
                  - "/running_cat"
                Image: "ubuntu:latest"
                ImageID: "d74508fb6632491cea586a1fd7d748dfc5274cd6fdfedee309ecdcbc2bf5cb82"
                Command: "echo 444444444444444444444444444444444"
                Created: 1367854152
                State: "Exited"
                Status: "Exit 0"
                Ports: [ ]
                Labels: { }
                SizeRw: 12288
                SizeRootFs: 0
                HostConfig:
                  NetworkMode: "default"
                NetworkSettings:
                  Networks:
                    bridge:
                      NetworkID: "7ea29fc1412292a2d7bba362f9253545fecdfa8ce9a6e37dd10ba8bee7129812"
                      EndpointID: "d91c7b2f0644403d7ef3095985ea0e2370325cd2332ff3a3225c4247328e66e9"
                      Gateway: "172.17.0.1"
                      IPAddress: "172.17.0.5"
                      IPPrefixLen: 16
                      IPv6Gateway: ""
                      GlobalIPv6Address: ""
                      GlobalIPv6PrefixLen: 0
                      MacAddress: "02:42:ac:11:00:05"
                Mounts: [ ]
        400:
          description: "bad parameter"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "server error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags: [ "Container" ]

  /motd:
    get:
      tags:
        - motd
      summary: fetches the message of the day
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/motd.motdResponse'
      security:
        - jwt: [ ]
  /registries:
    get:
      tags:
        - registries
      summary: List Registries
      description: |-
        List all registries based on the current user authorizations.
        Will return all registries if using an administrator account otherwise it
        will only return authorized registries.
        **Access policy**: restricted
      operationId: RegistryList
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/portainer.Registry'
        "500":
          description: Server error
      security:
        - jwt: [ ]
    post:
      tags:
        - registries
      summary: Create a new registry
      description: |-
        Create a new registry.
        **Access policy**: administrator
      operationId: RegistryCreate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Registry details
          required: true
          schema:
            $ref: '#/definitions/registries.registryCreatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Registry'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /registries/{id}:
    get:
      tags:
        - registries
      summary: Inspect a registry
      description: |-
        Retrieve details about a registry.
        **Access policy**: administrator
      operationId: RegistryInspect
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Registry identifier
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Registry'
        "400":
          description: Invalid request
        "403":
          description: Permission denied to access registry
        "404":
          description: Registry not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
    put:
      tags:
        - registries
      summary: Update a registry
      description: |-
        Update a registry
        **Access policy**: administrator
      operationId: RegistryUpdate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Registry identifier
          required: true
          type: integer
        - in: body
          name: body
          description: Registry details
          required: true
          schema:
            $ref: '#/definitions/registries.registryUpdatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Registry'
        "400":
          description: Invalid request
        "404":
          description: Registry not found
        "409":
          description: Another registry with the same URL already exists
        "500":
          description: Server error
      security:
        - jwt: [ ]
    delete:
      tags:
        - registries
      summary: Remove a registry
      description: |-
        Remove a registry
        **Access policy**: administrator
      operationId: RegistryDelete
      parameters:
        - name: id
          in: path
          description: Registry identifier
          required: true
          type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "404":
          description: Registry not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /registries/{id}/configure:
    post:
      tags:
        - registries
      summary: Configures a registry
      description: |-
        Configures a registry.
        **Access policy**: admin
      operationId: RegistryConfigure
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Registry identifier
          required: true
          type: integer
        - in: body
          name: body
          description: Registry configuration
          required: true
          schema:
            $ref: '#/definitions/registries.registryConfigurePayload'
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Registry not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /resource_controls:
    post:
      tags:
        - resource_controls
      summary: Create a new resource control
      description: |-
        Create a new resource control to restrict access to a Docker resource.
        **Access policy**: administrator
      operationId: ResourceControlCreate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Resource control details
          required: true
          schema:
            $ref: '#/definitions/resourcecontrols.resourceControlCreatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.ResourceControl'
        "400":
          description: Invalid request
        "409":
          description: Resource control already exists
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /resource_controls/{id}:
    put:
      tags:
        - resource_controls
      summary: Update a resource control
      description: |-
        Update a resource control
        **Access policy**: restricted
      operationId: ResourceControlUpdate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Resource control identifier
          required: true
          type: integer
        - in: body
          name: body
          description: Resource control details
          required: true
          schema:
            $ref: '#/definitions/resourcecontrols.resourceControlUpdatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.ResourceControl'
        "400":
          description: Invalid request
        "403":
          description: Unauthorized
        "404":
          description: Resource control not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
    delete:
      tags:
        - resource_controls
      summary: Remove a resource control
      description: |-
        Remove a resource control.
        **Access policy**: administrator
      parameters:
        - name: id
          in: path
          description: Resource control identifier
          required: true
          type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "404":
          description: Resource control not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /roles:
    get:
      tags:
        - roles
      summary: List roles
      description: |-
        List all roles available for use
        **Access policy**: administrator
      operationId: RoleList
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/portainer.Role'
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /settings:
    get:
      tags:
        - settings
      summary: Retrieve Portainer settings
      description: |-
        Retrieve Portainer settings.
        **Access policy**: administrator
      operationId: SettingsInspect
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Settings'
        "500":
          description: Server error
      security:
        - jwt: [ ]
    put:
      tags:
        - settings
      summary: Update Portainer settings
      description: |-
        Update Portainer settings.
        **Access policy**: administrator
      operationId: SettingsUpdate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: New settings
          required: true
          schema:
            $ref: '#/definitions/settings.settingsUpdatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Settings'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /settings/ldap/check:
    put:
      tags:
        - settings
      summary: Test LDAP connectivity
      description: |-
        Test LDAP connectivity using LDAP details
        **Access policy**: administrator
      operationId: SettingsLDAPCheck
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: details
          required: true
          schema:
            $ref: '#/definitions/settings.settingsLDAPCheckPayload'
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /settings/public:
    get:
      tags:
        - settings
      summary: Retrieve Portainer public settings
      description: |-
        Retrieve public settings. Returns a small set of settings that are not reserved to administrators only.
        **Access policy**: public
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/settings.publicSettingsResponse'
        "500":
          description: Server error
  /stacks:
    get:
      tags:
        - stacks
      summary: List stacks
      description: |-
        List all stacks based on the current user authorizations.
        Will return all stacks if using an administrator account otherwise it
        will only return the list of stacks the user have access to.
        **Access policy**: restricted
      operationId: StackList
      parameters:
        - name: filters
          in: query
          description: Filters to process on the stack list. Encoded as JSON (a map[string]string). For example, {
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/portainer.Stack'
        "204":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
        - jwt: [ ]
    post:
      tags:
        - stacks
      summary: Deploy a new stack
      description: |-
        Deploy a new stack into a Docker environment specified via the endpoint identifier.
        **Access policy**: restricted
      operationId: StackCreate
      consumes:
        - application/json
        - ' multipart/form-data'
      produces:
        - application/json
      parameters:
        - name: type
          in: query
          description: 'Stack deployment type. Possible values: 1 (Swarm stack) or 2 (Compose stack).'
          required: true
          type: integer
          enum:
            - 1
            - 2
        - name: method
          in: query
          description: 'Stack deployment method. Possible values: file, string or repository.'
          required: true
          type: string
          enum:
            - string
            - file
            - repository
        - name: endpointId
          in: query
          description: Identifier of the endpoint that will be used to deploy the stack
          required: true
          type: integer
        - in: body
          name: body_swarm_string
          description: Required when using method=string and type=1
          required: false
          schema:
            $ref: '#/definitions/stacks.swarmStackFromFileContentPayload'
        - in: body
          name: body_swarm_repository
          description: Required when using method=repository and type=1
          required: false
          schema:
            $ref: '#/definitions/stacks.swarmStackFromGitRepositoryPayload'
        - in: body
          name: body_compose_string
          description: Required when using method=string and type=2
          required: false
          schema:
            $ref: '#/definitions/stacks.composeStackFromFileContentPayload'
        - in: body
          name: body_compose_repository
          description: Required when using method=repository and type=2
          required: false
          schema:
            $ref: '#/definitions/stacks.composeStackFromGitRepositoryPayload'
        - name: Name
          in: formData
          description: Name of the stack. required when method is file
          required: false
          type: string
        - name: SwarmID
          in: formData
          description: Swarm cluster identifier. Required when method equals file and type equals 1. required when method is file
          required: false
          type: string
        - name: Env
          in: formData
          description: 'Environment variables passed during deployment, represented as a JSON array [{''name'': ''name'', ''value'': ''value''}]. Optional, used when method equals file and type equals 1.'
          required: false
          type: string
        - name: file
          in: formData
          description: Stack file. required when method is file
          required: false
          type: file
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.CustomTemplate'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /stacks/{id}:
    get:
      tags:
        - stacks
      summary: Inspect a stack
      description: |-
        Retrieve details about a stack.
        **Access policy**: restricted
      operationId: StackInspect
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Stack'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Stack not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
    put:
      tags:
        - stacks
      summary: Update a stack
      description: |-
        Update a stack.
        **Access policy**: restricted
      operationId: StackUpdate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          type: integer
        - name: endpointId
          in: query
          description: Stacks created before version 1.18.0 might not have an associated endpoint identifier. Use this optional parameter to set the endpoint identifier used by the stack.
          required: false
          type: integer
        - in: body
          name: body
          description: Stack details
          required: true
          schema:
            $ref: '#/definitions/stacks.updateSwarmStackPayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Stack'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: ' not found'
        "500":
          description: Server error
      security:
        - jwt: [ ]
    delete:
      tags:
        - stacks
      summary: Remove a stack
      description: |-
        Remove a stack.
        **Access policy**: restricted
      operationId: StackDelete
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          type: integer
        - name: external
          in: query
          description: Set to true to delete an external stack. Only external Swarm stacks are supported
          required: false
          type: boolean
        - name: endpointId
          in: query
          description: Endpoint identifier used to remove an external stack (required when external is set to true)
          required: false
          type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: ' not found'
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /stacks/{id}/file:
    get:
      tags:
        - stacks
      summary: Retrieve the content of the Stack file for the specified stack
      description: |-
        Get Stack file content.
        **Access policy**: restricted
      operationId: StackFileInspect
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/stacks.stackFileResponse'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Stack not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /stacks/{id}/migrate:
    post:
      tags:
        - stacks
      summary: Migrate a stack to another endpoint
      description: |-
        Migrate a stack from an endpoint to another endpoint. It will re-create the stack inside the target endpoint before removing the original stack.
        **Access policy**: restricted
      operationId: StackMigrate
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          type: integer
        - name: endpointId
          in: query
          description: Stacks created before version 1.18.0 might not have an associated endpoint identifier. Use this optional parameter to set the endpoint identifier used by the stack.
          required: false
          type: integer
        - in: body
          name: body
          description: Stack migration details
          required: true
          schema:
            $ref: '#/definitions/stacks.stackMigratePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Stack'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Stack not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /stacks/{id}/start:
    post:
      tags:
        - stacks
      summary: Starts a stopped Stack
      description: |-
        Starts a stopped Stack.
        **Access policy**: restricted
      operationId: StackStart
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Stack'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: ' not found'
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /stacks/{id}/stop:
    post:
      tags:
        - stacks
      summary: Stops a stopped Stack
      description: |-
        Stops a stopped Stack.
        **Access policy**: restricted
      operationId: StackStop
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Stack'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: ' not found'
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /status:
    get:
      tags:
        - status
      summary: Check Portainer status
      description: |-
        Retrieve Portainer status
        **Access policy**: public
      operationId: StatusInspect
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Status'
  /status/version:
    get:
      tags:
        - status
      summary: Check for portainer updates
      description: |-
        Check if portainer has an update available
        **Access policy**: authenticated
      operationId: StatusInspectVersion
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/status.inspectVersionResponse'
      security:
        - jwt: [ ]
  /tags:
    get:
      tags:
        - tags
      summary: List tags
      description: |-
        List tags.
        **Access policy**: administrator
      operationId: TagList
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/portainer.Tag'
        "500":
          description: Server error
      security:
        - jwt: [ ]
    post:
      tags:
        - tags
      summary: Create a new tag
      description: |-
        Create a new tag.
        **Access policy**: administrator
      operationId: TagCreate
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Tag details
          required: true
          schema:
            $ref: '#/definitions/tags.tagCreatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Tag'
        "409":
          description: Tag name exists
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /tags/{id}:
    delete:
      tags:
        - tags
      summary: Remove a tag
      description: |-
        Remove a tag.
        **Access policy**: administrator
      operationId: TagDelete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Tag identifier
          required: true
          type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Tag not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /team:
    post:
      tags:
        - teams
      summary: Create a new team
      description: |-
        Create a new team.
        **Access policy**: administrator
      operationId: TeamCreate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: details
          required: true
          schema:
            $ref: '#/definitions/teams.teamCreatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Team'
        "400":
          description: Invalid request
        "409":
          description: Team already exists
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /team/{id}:
    put:
      tags:
        - ""
      summary: Update a team
      description: |-
        Update a team.
        **Access policy**: administrator
      operationId: TeamUpdate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Team identifier
          required: true
          type: integer
        - in: body
          name: body
          description: Team details
          required: true
          schema:
            $ref: '#/definitions/teams.teamUpdatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Team'
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Team not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /team_memberships:
    get:
      tags:
        - team_memberships
      summary: List team memberships
      description: |-
        List team memberships. Access is only available to administrators and team leaders.
        **Access policy**: admin
      operationId: TeamMembershipList
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/portainer.TeamMembership'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "500":
          description: Server error
      security:
        - jwt: [ ]
    post:
      tags:
        - team_memberships
      summary: Create a new team membership
      description: |-
        Create a new team memberships. Access is only available to administrators leaders of the associated team.
        **Access policy**: admin
      operationId: TeamMembershipCreate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Team membership details
          required: true
          schema:
            $ref: '#/definitions/teammemberships.teamMembershipCreatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.TeamMembership'
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied to manage memberships
        "409":
          description: Team membership already registered
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /team_memberships/{id}:
    put:
      tags:
        - team_memberships
      summary: Update a team membership
      description: |-
        Update a team membership. Access is only available to administrators leaders of the associated team.
        **Access policy**: restricted
      operationId: TeamMembershipUpdate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Team membership identifier
          required: true
          type: integer
        - in: body
          name: body
          description: Team membership details
          required: true
          schema:
            $ref: '#/definitions/teammemberships.teamMembershipUpdatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.TeamMembership'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: TeamMembership not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
    delete:
      tags:
        - team_memberships
      summary: Remove a team membership
      description: |-
        Remove a team membership. Access is only available to administrators leaders of the associated team.
        **Access policy**: restricted
      operationId: TeamMembershipDelete
      parameters:
        - name: id
          in: path
          description: TeamMembership identifier
          required: true
          type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: TeamMembership not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /teams:
    get:
      tags:
        - teams
      summary: List teams
      description: |-
        List teams. For non-administrator users, will only list the teams they are member of.
        **Access policy**: restricted
      operationId: TeamList
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/portainer.Team'
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /teams/{id}:
    get:
      tags:
        - teams
      summary: Inspect a team
      description: |-
        Retrieve details about a team. Access is only available for administrator and leaders of that team.
        **Access policy**: restricted
      operationId: TeamInspect
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Team identifier
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.Team'
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Team not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
    delete:
      tags:
        - teams
      summary: Remove a team
      description: |-
        Remove a team.
        **Access policy**: administrator
      operationId: TeamDelete
      parameters: [ ]
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: Team not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /teams/{id}/memberships:
    get:
      tags:
        - team_memberships
      summary: List team memberships
      description: |-
        List team memberships. Access is only available to administrators and team leaders.
        **Access policy**: restricted
      operationId: TeamMemberships
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/portainer.TeamMembership'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /templates:
    get:
      tags:
        - templates
      summary: List available templates
      description: |-
        List available templates.
        **Access policy**: restricted
      operationId: TemplateList
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/templates.listResponse'
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /templates/file:
    post:
      tags:
        - templates
      summary: Get a template's file
      description: |-
        Get a template's file
        **Access policy**: restricted
      operationId: TemplateFile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: File details
          required: true
          schema:
            $ref: '#/definitions/templates.filePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/templates.fileResponse'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /upload/tls/{certificate}:
    post:
      tags:
        - upload
      summary: Upload TLS files
      description: |-
        Use this endpoint to upload TLS files.
        **Access policy**: administrator
      operationId: UploadTLS
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: certificate
          in: path
          description: TLS file type. Valid values are 'ca', 'cert' or 'key'.
          required: true
          type: string
          enum:
            - ca
            - cert
            - key
        - name: folder
          in: formData
          description: Folder where the TLS file will be stored. Will be created if not existing
          required: true
          type: string
        - name: file
          in: formData
          description: The file to upload
          required: true
          type: file
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /users:
    get:
      tags:
        - users
      summary: List users
      description: |-
        List Portainer users.
        Non-administrator users will only be able to list other non-administrator user accounts.
        **Access policy**: restricted
      operationId: UserList
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/portainer.User'
        "400":
          description: Invalid request
        "500":
          description: Server error
      security:
        - jwt: [ ]
    post:
      tags:
        - users
      summary: Create a new user
      description: |-
        Create a new Portainer user.
        Only team leaders and administrators can create users.
        Only administrators can create an administrator user account.
        **Access policy**: restricted
      operationId: UserCreate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User details
          required: true
          schema:
            $ref: '#/definitions/users.userCreatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.User'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "409":
          description: User already exists
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /users/{id}:
    get:
      tags:
        - users
      summary: Inspect a user
      description: |-
        Retrieve details about a user.
        **Access policy**: administrator
      operationId: UserInspect
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.User'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: User not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
    put:
      tags:
        - users
      summary: Update a user
      description: |-
        Update user details. A regular user account can only update his details.
        **Access policy**: authenticated
      operationId: UserUpdate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          type: integer
        - in: body
          name: body
          description: User details
          required: true
          schema:
            $ref: '#/definitions/users.userUpdatePayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.User'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: User not found
        "409":
          description: Username already exist
        "500":
          description: Server error
      security:
        - jwt: [ ]
    delete:
      tags:
        - users
      summary: Remove a user
      description: |-
        Remove a user.
        **Access policy**: administrator
      operationId: UserDelete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          type: integer
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: User not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /users/{id}/memberships:
    get:
      tags:
        - users
      summary: Inspect a user memberships
      description: |-
        Inspect a user memberships.
        **Access policy**: authenticated
      operationId: UserMembershipsInspect
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.TeamMembership'
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /users/{id}/passwd:
    put:
      tags:
        - users
      summary: Update password for a user
      description: |-
        Update password for the specified user.
        **Access policy**: authenticated
      operationId: UserUpdatePassword
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: identifier
          required: true
          type: integer
        - in: body
          name: body
          description: details
          required: true
          schema:
            $ref: '#/definitions/users.userUpdatePasswordPayload'
      responses:
        "204":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Permission denied
        "404":
          description: User not found
        "500":
          description: Server error
      security:
        - jwt: [ ]
  /users/admin/check:
    get:
      tags:
        - users
      summary: Check administrator account existence
      description: |-
        Check if an administrator account exists in the database.
        **Access policy**: public
      operationId: UserAdminCheck
      parameters: [ ]
      responses:
        "204":
          description: Success
        "404":
          description: User not found
  /users/admin/init:
    post:
      tags:
        - ""
      summary: Initialize administrator account
      description: |-
        Initialize the 'admin' user account.
        **Access policy**: public
      operationId: UserAdminInit
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User details
          required: true
          schema:
            $ref: '#/definitions/users.adminInitPayload'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/portainer.User'
        "400":
          description: Invalid request
        "409":
          description: Admin user already initialized
        "500":
          description: Server error
  /webhooks:
    get:
      tags:
        - webhooks
      summary: List webhooks
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Webhook data
          required: true
          schema:
            $ref: '#/definitions/webhooks.webhookCreatePayload'
        - name: EndpointID
          in: query
          required: false
          type: integer
        - name: ResourceID
          in: query
          required: false
          type: string
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/portainer.Webhook'
        "400":
          description: ""
        "500":
          description: ""
      security:
        - jwt: [ ]
    post:
      tags:
        - webhooks
      summary: Create a webhook
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Webhook data
          required: true
          schema:
            $ref: '#/definitions/webhooks.webhookCreatePayload'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.Webhook'
        "400":
          description: ""
        "409":
          description: ""
        "500":
          description: ""
      security:
        - jwt: [ ]
  /webhooks/{id}:
    delete:
      tags:
        - webhooks
      summary: Delete a webhook
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Webhook id
          required: true
          type: integer
      responses:
        "202":
          description: Webhook deleted
        "400":
          description: ""
        "500":
          description: ""
      security:
        - jwt: [ ]
  /webhooks/{token}:
    post:
      tags:
        - webhooks
      summary: Execute a webhook
      description: Acts on a passed in token UUID to restart the docker service
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: token
          in: path
          description: Webhook token
          required: true
          type: string
      responses:
        "202":
          description: Webhook executed
        "400":
          description: ""
        "500":
          description: ""
  /websocket/attach:
    get:
      tags:
        - websocket
      summary: Attach a websocket
      description: |-
        If the nodeName query parameter is present, the request will be proxied to the underlying agent endpoint.
        If the nodeName query parameter is not specified, the request will be upgraded to the websocket protocol and
        an AttachStart operation HTTP request will be created and hijacked.
        Authentication and access is controlled via the mandatory token query parameter.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: endpointId
          in: query
          description: endpoint ID of the endpoint where the resource is located
          required: true
          type: integer
        - name: nodeName
          in: query
          description: node name
          required: false
          type: string
        - name: token
          in: query
          description: JWT token used for authentication against this endpoint
          required: true
          type: string
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "403":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
        - jwt: [ ]
  /websocket/exec:
    get:
      tags:
        - websocket
      summary: Execute a websocket
      description: |-
        If the nodeName query parameter is present, the request will be proxied to the underlying agent endpoint.
        If the nodeName query parameter is not specified, the request will be upgraded to the websocket protocol and
        an ExecStart operation HTTP request will be created and hijacked.
        Authentication and access is controlled via the mandatory token query parameter.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: endpointId
          in: query
          description: endpoint ID of the endpoint where the resource is located
          required: true
          type: integer
        - name: nodeName
          in: query
          description: node name
          required: false
          type: string
        - name: token
          in: query
          description: JWT token used for authentication against this endpoint
          required: true
          type: string
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "409":
          description: ""
        "500":
          description: ""
      security:
        - jwt: [ ]
  /websocket/pod:
    get:
      tags:
        - websocket
      summary: Execute a websocket on pod
      description: |-
        The request will be upgraded to the websocket protocol.
        Authentication and access is controlled via the mandatory token query parameter.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: endpointId
          in: query
          description: endpoint ID of the endpoint where the resource is located
          required: true
          type: integer
        - name: namespace
          in: query
          description: namespace where the container is located
          required: true
          type: string
        - name: podName
          in: query
          description: name of the pod containing the container
          required: true
          type: string
        - name: containerName
          in: query
          description: name of the container
          required: true
          type: string
        - name: command
          in: query
          description: command to execute in the container
          required: true
          type: string
        - name: token
          in: query
          description: JWT token used for authentication against this endpoint
          required: true
          type: string
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "403":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
        - jwt: [ ]
securityDefinitions:
  jwt:
    type: apiKey
    name: Authorization
    in: header
definitions:
  ErrorResponse:
    description: "Represents an error."
    type: "object"
    required: [ "message" ]
    properties:
      message:
        description: "The error message."
        type: "string"
        x-nullable: false
    example:
      message: "Something went wrong."

  Port:
    type: "object"
    description: "An open port on a container"
    required: [ PrivatePort, Type ]
    properties:
      IP:
        type: "string"
        format: "ip-address"
        description: "Host IP address that the container's port is mapped to"
      PrivatePort:
        type: "integer"
        format: "uint16"
        x-nullable: false
        description: "Port on the container"
      PublicPort:
        type: "integer"
        format: "uint16"
        description: "Port exposed on the host"
      Type:
        type: "string"
        x-nullable: false
        enum: [ "tcp", "udp", "sctp" ]
    example:
      PrivatePort: 8080
      PublicPort: 80
      Type: "tcp"

  ContainerSummary:
    type: "object"
    properties:
      Id:
        description: "The ID of this container"
        type: "string"
        x-go-name: "ID"
      Names:
        description: "The names that this container has been given"
        type: "array"
        items:
          type: "string"
      Image:
        description: "The name of the image used when creating this container"
        type: "string"
      ImageID:
        description: "The ID of the image that this container was created from"
        type: "string"
      Command:
        description: "Command to run when starting the container"
        type: "string"
      Created:
        description: "When the container was created"
        type: "integer"
        format: "int64"
      Ports:
        description: "The ports exposed by this container"
        type: "array"
        items:
          $ref: "#/definitions/Port"
      SizeRw:
        description: "The size of files that have been created or changed by this container"
        type: "integer"
        format: "int64"
      SizeRootFs:
        description: "The total size of all the files in this container"
        type: "integer"
        format: "int64"
      Labels:
        description: "User-defined key/value metadata."
        type: "object"
        additionalProperties:
          type: "string"
      State:
        description: "The state of this container (e.g. `Exited`)"
        type: "string"
      Status:
        description: "Additional human-readable status of this container (e.g. `Exit 0`)"
        type: "string"
      HostConfig:
        type: "object"
        properties:
          NetworkMode:
            type: "string"
      NetworkSettings:
        description: "A summary of the container's network settings"
        type: "object"
        properties:
          Networks:
            type: "object"
            additionalProperties:
              $ref: "#/definitions/EndpointSettings"
      Mounts:
        type: "array"
        items:
          $ref: "#/definitions/Mount"

  Mount:
    type: "object"
    properties:
      Target:
        description: "Container path."
        type: "string"
      Source:
        description: "Mount source (e.g. a volume name, a host path)."
        type: "string"
      Type:
        description: |
          The mount type. Available types:

          - `bind` Mounts a file or directory from the host into the container. Must exist prior to creating the container.
          - `volume` Creates a volume with the given name and options (or uses a pre-existing volume with the same name and options). These are **not** removed when the container is removed.
          - `tmpfs` Create a tmpfs with the given options. The mount source cannot be specified for tmpfs.
          - `npipe` Mounts a named pipe from the host into the container. Must exist prior to creating the container.
        type: "string"
        enum:
          - "bind"
          - "volume"
          - "tmpfs"
          - "npipe"
      ReadOnly:
        description: "Whether the mount should be read-only."
        type: "boolean"
      Consistency:
        description: "The consistency requirement for the mount: `default`, `consistent`, `cached`, or `delegated`."
        type: "string"
      BindOptions:
        description: "Optional configuration for the `bind` type."
        type: "object"
        properties:
          Propagation:
            description: "A propagation mode with the value `[r]private`, `[r]shared`, or `[r]slave`."
            type: "string"
            enum:
              - "private"
              - "rprivate"
              - "shared"
              - "rshared"
              - "slave"
              - "rslave"
          NonRecursive:
            description: "Disable recursive bind mount."
            type: "boolean"
            default: false
      VolumeOptions:
        description: "Optional configuration for the `volume` type."
        type: "object"
        properties:
          NoCopy:
            description: "Populate volume with data from the target."
            type: "boolean"
            default: false
          Labels:
            description: "User-defined key/value metadata."
            type: "object"
            additionalProperties:
              type: "string"
          DriverConfig:
            description: "Map of driver specific options"
            type: "object"
            properties:
              Name:
                description: "Name of the driver to use to create the volume."
                type: "string"
              Options:
                description: "key/value map of driver specific options."
                type: "object"
                additionalProperties:
                  type: "string"
      TmpfsOptions:
        description: "Optional configuration for the `tmpfs` type."
        type: "object"
        properties:
          SizeBytes:
            description: "The size for the tmpfs mount in bytes."
            type: "integer"
            format: "int64"
          Mode:
            description: "The permission mode for the tmpfs mount in an integer."
            type: "integer"

  auth.authenticatePayload:
    type: object
    required:
      - password
      - username
    properties:
      password:
        type: string
        example: mypassword
        description: Password
      username:
        type: string
        example: admin
        description: Username
  auth.authenticateResponse:
    type: object
    properties:
      jwt:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE
        description: JWT token used to authenticate against the API
  auth.oauthPayload:
    type: object
    properties:
      code:
        type: string
        description: OAuth code returned from OAuth Provided
  customtemplates.customTemplateFromFileContentPayload:
    type: object
    required:
      - description
      - fileContent
      - platform
      - title
      - type
    properties:
      description:
        type: string
        example: High performance web server
        description: Description of the template
      fileContent:
        type: string
        description: Content of stack file
      logo:
        type: string
        example: https://cloudinovasi.id/assets/img/logos/nginx.png
        description: URL of the template's logo
      note:
        type: string
        example: This is my <b>custom</b> template
        description: A note that will be displayed in the UI. Supports HTML content
      platform:
        type: integer
        example: 1
        description: |-
          Platform associated to the template.
          Valid values are: 1 - 'linux', 2 - 'windows'
      title:
        type: string
        example: Nginx
        description: Title of the template
      type:
        type: integer
        example: 1
        description: Type of created stack (1 - swarm, 2 - compose)
  customtemplates.customTemplateFromGitRepositoryPayload:
    type: object
    required:
      - description
      - platform
      - repositoryURL
      - title
      - type
    properties:
      composeFilePathInRepository:
        type: string
        example: docker-compose.yml
        description: Path to the Stack file inside the Git repository
        default: docker-compose.yml
      description:
        type: string
        example: High performance web server
        description: Description of the template
      logo:
        type: string
        example: https://cloudinovasi.id/assets/img/logos/nginx.png
        description: URL of the template's logo
      note:
        type: string
        example: This is my <b>custom</b> template
        description: A note that will be displayed in the UI. Supports HTML content
      platform:
        type: integer
        example: 1
        description: |-
          Platform associated to the template.
          Valid values are: 1 - 'linux', 2 - 'windows'
      repositoryAuthentication:
        type: boolean
        example: true
        description: Use basic authentication to clone the Git repository
      repositoryPassword:
        type: string
        example: myGitPassword
        description: Password used in basic authentication. Required when RepositoryAuthentication is true.
      repositoryReferenceName:
        type: string
        example: refs/heads/master
        description: Reference name of a Git repository hosting the Stack file
      repositoryURL:
        type: string
        example: https://github.com/openfaas/faas
        description: URL of a Git repository hosting the Stack file
      repositoryUsername:
        type: string
        example: myGitUsername
        description: Username used in basic authentication. Required when RepositoryAuthentication is true.
      title:
        type: string
        example: Nginx
        description: Title of the template
      type:
        type: integer
        example: 1
        description: Type of created stack (1 - swarm, 2 - compose)
  customtemplates.customTemplateUpdatePayload:
    type: object
    required:
      - description
      - fileContent
      - platform
      - title
      - type
    properties:
      description:
        type: string
        example: High performance web server
        description: Description of the template
      fileContent:
        type: string
        description: Content of stack file
      logo:
        type: string
        example: https://cloudinovasi.id/assets/img/logos/nginx.png
        description: URL of the template's logo
      note:
        type: string
        example: This is my <b>custom</b> template
        description: A note that will be displayed in the UI. Supports HTML content
      platform:
        type: integer
        example: 1
        description: |-
          Platform associated to the template.
          Valid values are: 1 - 'linux', 2 - 'windows'
      title:
        type: string
        example: Nginx
        description: Title of the template
      type:
        type: integer
        example: 1
        description: Type of created stack (1 - swarm, 2 - compose)
  customtemplates.fileResponse:
    type: object
    properties:
      fileContent:
        type: string
  dockerhub.dockerhubUpdatePayload:
    type: object
    required:
      - authentication
      - password
      - username
    properties:
      authentication:
        type: boolean
        example: false
        description: Enable authentication against DockerHub
      password:
        type: string
        example: hub_password
        description: Password used to authenticate against the DockerHub
      username:
        type: string
        example: hub_user
        description: Username used to authenticate against the DockerHub
  edgegroups.edgeGroupCreatePayload:
    type: object
    properties:
      dynamic:
        type: boolean
      endpoints:
        type: array
        items:
          type: integer
      name:
        type: string
      partialMatch:
        type: boolean
      tagIDs:
        type: array
        items:
          type: integer
          example: 1
          description: Tag identifier
  edgegroups.edgeGroupUpdatePayload:
    type: object
    properties:
      dynamic:
        type: boolean
      endpoints:
        type: array
        items:
          type: integer
      name:
        type: string
      partialMatch:
        type: boolean
      tagIDs:
        type: array
        items:
          type: integer
          example: 1
          description: Tag identifier
  edgejobs.edgeJobCreateFromFileContentPayload:
    type: object
    properties:
      cronExpression:
        type: string
      endpoints:
        type: array
        items:
          type: integer
      fileContent:
        type: string
      name:
        type: string
      recurring:
        type: boolean
  edgejobs.edgeJobCreateFromFilePayload:
    type: object
    properties:
      cronExpression:
        type: string
      endpoints:
        type: array
        items:
          type: integer
      file:
        type: array
        items:
          type: integer
      name:
        type: string
      recurring:
        type: boolean
  edgejobs.edgeJobFileResponse:
    type: object
    properties:
      FileContent:
        type: string
  edgejobs.edgeJobUpdatePayload:
    type: object
    properties:
      cronExpression:
        type: string
      endpoints:
        type: array
        items:
          type: integer
      fileContent:
        type: string
      name:
        type: string
      recurring:
        type: boolean
  edgejobs.fileResponse:
    type: object
    properties:
      FileContent:
        type: string
  edgejobs.taskContainer:
    type: object
    properties:
      EndpointId:
        type: integer
      Id:
        type: string
      LogsStatus:
        type: integer
  edgestacks.stackFileResponse:
    type: object
    properties:
      StackFileContent:
        type: string
  edgestacks.swarmStackFromFileContentPayload:
    type: object
    required:
      - name
      - stackFileContent
    properties:
      edgeGroups:
        type: array
        example:
          - 1
        description: List of identifiers of EdgeGroups
        items:
          type: integer
          example: 1
          description: EdgeGroup Identifier
      name:
        type: string
        example: myStack
        description: Name of the stack
      stackFileContent:
        type: string
        example: |-
          version: 3
           services:
           web:
           image:nginx
        description: Content of the Stack file
  edgestacks.swarmStackFromFileUploadPayload:
    type: object
    properties:
      edgeGroups:
        type: array
        items:
          type: integer
          example: 1
          description: EdgeGroup Identifier
      name:
        type: string
      stackFileContent:
        type: array
        items:
          type: integer
  edgestacks.swarmStackFromGitRepositoryPayload:
    type: object
    required:
      - name
      - repositoryURL
    properties:
      composeFilePathInRepository:
        type: string
        example: docker-compose.yml
        description: Path to the Stack file inside the Git repository
        default: docker-compose.yml
      edgeGroups:
        type: array
        example:
          - 1
        description: List of identifiers of EdgeGroups
        items:
          type: integer
          example: 1
          description: EdgeGroup Identifier
      name:
        type: string
        example: myStack
        description: Name of the stack
      repositoryAuthentication:
        type: boolean
        example: true
        description: Use basic authentication to clone the Git repository
      repositoryPassword:
        type: string
        example: myGitPassword
        description: Password used in basic authentication. Required when RepositoryAuthentication is true.
      repositoryReferenceName:
        type: string
        example: refs/heads/master
        description: Reference name of a Git repository hosting the Stack file
      repositoryURL:
        type: string
        example: https://github.com/openfaas/faas
        description: URL of a Git repository hosting the Stack file
      repositoryUsername:
        type: string
        example: myGitUsername
        description: Username used in basic authentication. Required when RepositoryAuthentication is true.
  edgestacks.updateEdgeStackPayload:
    type: object
    properties:
      edgeGroups:
        type: array
        items:
          type: integer
          example: 1
          description: EdgeGroup Identifier
      prune:
        type: boolean
      stackFileContent:
        type: string
      version:
        type: integer
  endpointedge.configResponse:
    type: object
    properties:
      name:
        type: string
      prune:
        type: boolean
      stackFileContent:
        type: string
  endpointgroups.endpointGroupCreatePayload:
    type: object
    required:
      - name
    properties:
      associatedEndpoints:
        type: array
        example:
          - 1
          - 3
        description: List of endpoint identifiers that will be part of this group
        items:
          type: integer
      description:
        type: string
        example: description
        description: Endpoint group description
      name:
        type: string
        example: my-endpoint-group
        description: Endpoint group name
      tagIDs:
        type: array
        example:
          - 1
          - 2
        description: List of tag identifiers to which this endpoint group is associated
        items:
          type: integer
          example: 1
          description: Tag identifier
  endpointgroups.endpointGroupUpdatePayload:
    type: object
    properties:
      description:
        type: string
        example: description
        description: Endpoint group description
      name:
        type: string
        example: my-endpoint-group
        description: Endpoint group name
      tagIDs:
        type: array
        example:
          - 3
          - 4
        description: List of tag identifiers associated to the endpoint group
        items:
          type: integer
          example: 1
          description: Tag identifier
      teamAccessPolicies:
        $ref: '#/definitions/portainer.TeamAccessPolicies'
      userAccessPolicies:
        $ref: '#/definitions/portainer.UserAccessPolicies'
  endpoints.edgeJobResponse:
    type: object
    properties:
      CollectLogs:
        type: boolean
        example: true
        description: Whether to collect logs
      CronExpression:
        type: string
        example: '* * * * *'
        description: A cron expression to schedule this job
      Id:
        type: integer
        example: 2
        description: EdgeJob Identifier
      Script:
        type: string
        example: echo hello
        description: Script to run
      Version:
        type: integer
        example: 2
        description: Version of this EdgeJob
  endpoints.endpointStatusInspectResponse:
    type: object
    properties:
      checkin:
        type: integer
        example: 5
        description: The current value of CheckinInterval
      credentials:
        type: string
      port:
        type: integer
        example: 8732
        description: The tunnel port
      schedules:
        type: array
        description: List of requests for jobs to run on the endpoint
        items:
          $ref: '#/definitions/endpoints.edgeJobResponse'
      stacks:
        type: array
        description: List of stacks to be deployed on the endpoints
        items:
          $ref: '#/definitions/endpoints.stackStatusResponse'
      status:
        type: string
        example: REQUIRED
        description: Status represents the endpoint status
  endpoints.endpointUpdatePayload:
    type: object
    properties:
      azureApplicationID:
        type: string
        example: eag7cdo9-o09l-9i83-9dO9-f0b23oe78db4
        description: Azure application ID
      azureAuthenticationKey:
        type: string
        example: cOrXoK/1D35w8YQ8nH1/8ZGwzz45JIYD5jxHKXEQknk=
        description: Azure authentication key
      azureTenantID:
        type: string
        example: 34ddc78d-4fel-2358-8cc1-df84c8o839f5
        description: Azure tenant ID
      edgeCheckinInterval:
        type: integer
        example: 5
        description: The check in interval for edge agent (in seconds)
      groupID:
        type: integer
        example: 1
        description: Group identifier
      kubernetes:
        description: Associated Kubernetes data
        $ref: '#/definitions/portainer.KubernetesData'
      name:
        type: string
        example: my-endpoint
        description: Name that will be used to identify this endpoint
      publicURL:
        type: string
        example: docker.mydomain.tld:2375
        description: |-
          URL or IP address where exposed containers will be reachable.\
          Defaults to URL if not specified
      status:
        type: integer
        example: 1
        description: The status of the endpoint (1 - up, 2 - down)
      tagIDs:
        type: array
        example:
          - 1
          - 2
        description: List of tag identifiers to which this endpoint is associated
        items:
          type: integer
          example: 1
          description: Tag identifier
      teamAccessPolicies:
        $ref: '#/definitions/portainer.TeamAccessPolicies'
      tls:
        type: boolean
        example: true
        description: Require TLS to connect against this endpoint
      tlsskipClientVerify:
        type: boolean
        example: false
        description: Skip client verification when using TLS
      tlsskipVerify:
        type: boolean
        example: false
        description: Skip server verification when using TLS
      url:
        type: string
        example: docker.mydomain.tld:2375
        description: URL or IP address of a Docker host
      userAccessPolicies:
        $ref: '#/definitions/portainer.UserAccessPolicies'
  endpoints.stackStatusResponse:
    type: object
    properties:
      id:
        type: integer
        example: 1
        description: EdgeStack Identifier
      version:
        type: integer
        example: 3
        description: Version of this stack
  motd.motdResponse:
    type: object
    properties:
      ContentLayout:
        type: object
        additionalProperties:
          type: string
      Hash:
        type: array
        items:
          type: integer
      Message:
        type: string
      Style:
        type: string
      Title:
        type: string
  portainer.AccessPolicy:
    type: object
    properties:
      RoleId:
        type: integer
        example: 1
        description: Role identifier. Reference the role that will be associated to this access policy
  portainer.Authorizations:
    type: object
    additionalProperties:
      type: boolean
  portainer.AzureCredentials:
    type: object
    properties:
      ApplicationID:
        type: string
        example: eag7cdo9-o09l-9i83-9dO9-f0b23oe78db4
        description: Azure application ID
      AuthenticationKey:
        type: string
        example: cOrXoK/1D35w8YQ8nH1/8ZGwzz45JIYD5jxHKXEQknk=
        description: Azure authentication key
      TenantID:
        type: string
        example: 34ddc78d-4fel-2358-8cc1-df84c8o839f5
        description: Azure tenant ID
  portainer.CustomTemplate:
    type: object
    properties:
      CreatedByUserId:
        type: integer
        example: 3
        description: User identifier who created this template
      Description:
        type: string
        example: High performance web server
        description: Description of the template
      EntryPoint:
        type: string
        example: docker-compose.yml
        description: Path to the Stack file
      Id:
        type: integer
        example: 1
        description: CustomTemplate Identifier
      Logo:
        type: string
        example: https://cloudinovasi.id/assets/img/logos/nginx.png
        description: URL of the template's logo
      Note:
        type: string
        example: This is my <b>custom</b> template
        description: A note that will be displayed in the UI. Supports HTML content
      Platform:
        type: integer
        example: 1
        description: |-
          Platform associated to the template.
          Valid values are: 1 - 'linux', 2 - 'windows'
      ProjectPath:
        type: string
        example: /data/custom_template/3
        description: Path on disk to the repository hosting the Stack file
      ResourceControl:
        $ref: '#/definitions/portainer.ResourceControl'
      Title:
        type: string
        example: Nginx
        description: Title of the template
      Type:
        type: integer
        example: 1
        description: Type of created stack (1 - swarm, 2 - compose)
  portainer.DockerHub:
    type: object
    properties:
      Authentication:
        type: boolean
        example: true
        description: Is authentication against DockerHub enabled
      Password:
        type: string
        example: passwd
        description: Password used to authenticate against the DockerHub
      Username:
        type: string
        example: user
        description: Username used to authenticate against the DockerHub
  portainer.DockerSnapshot:
    type: object
    properties:
      DockerSnapshotRaw:
        $ref: '#/definitions/portainer.DockerSnapshotRaw'
      DockerVersion:
        type: string
      HealthyContainerCount:
        type: integer
      ImageCount:
        type: integer
      RunningContainerCount:
        type: integer
      ServiceCount:
        type: integer
      StackCount:
        type: integer
      StoppedContainerCount:
        type: integer
      Swarm:
        type: boolean
      Time:
        type: integer
      TotalCPU:
        type: integer
      TotalMemory:
        type: integer
      UnhealthyContainerCount:
        type: integer
      VolumeCount:
        type: integer
  portainer.DockerSnapshotRaw:
    type: object
    properties:
      Containers:
        type: object
        properties: { }
      Images:
        type: object
        properties: { }
      Info:
        type: object
        properties: { }
      Networks:
        type: object
        properties: { }
      Version:
        type: object
        properties: { }
      Volumes:
        type: object
        properties: { }
  portainer.EdgeGroup:
    type: object
    properties:
      Dynamic:
        type: boolean
      Endpoints:
        type: array
        items:
          type: integer
      Id:
        type: integer
        example: 1
        description: EdgeGroup Identifier
      Name:
        type: string
      PartialMatch:
        type: boolean
      TagIds:
        type: array
        items:
          type: integer
          example: 1
          description: Tag identifier
  portainer.EdgeJob:
    type: object
    properties:
      Created:
        type: integer
      CronExpression:
        type: string
      Endpoints:
        type: object
        additionalProperties:
          $ref: '#/definitions/portainer.EdgeJobEndpointMeta'
      Id:
        type: integer
        example: 1
        description: EdgeJob Identifier
      Name:
        type: string
      Recurring:
        type: boolean
      ScriptPath:
        type: string
      Version:
        type: integer
  portainer.EdgeJobEndpointMeta:
    type: object
    properties:
      collectLogs:
        type: boolean
      logsStatus:
        type: integer
  portainer.EdgeStack:
    type: object
    properties:
      CreationDate:
        type: integer
      EdgeGroups:
        type: array
        items:
          type: integer
          example: 1
          description: EdgeGroup Identifier
      EntryPoint:
        type: string
      Id:
        type: integer
        example: 1
        description: EdgeStack Identifier
      Name:
        type: string
      ProjectPath:
        type: string
      Prune:
        type: boolean
      Status:
        type: object
        additionalProperties:
          $ref: '#/definitions/portainer.EdgeStackStatus'
      Version:
        type: integer
  portainer.EdgeStackStatus:
    type: object
    properties:
      EndpointID:
        type: integer
      Error:
        type: string
      Type:
        type: integer
  portainer.Endpoint:
    type: object
    properties:
      AuthorizedTeams:
        type: array
        items:
          type: integer
      AuthorizedUsers:
        type: array
        description: Deprecated in DBVersion == 18
        items:
          type: integer
          description: |-
            Deprecated fields
            Deprecated in DBVersion == 2
      AzureCredentials:
        $ref: '#/definitions/portainer.AzureCredentials'
      EdgeCheckinInterval:
        type: integer
        example: 5
        description: The check in interval for edge agent (in seconds)
      EdgeID:
        type: string
        description: The identifier of the edge agent associated with this endpoint
      EdgeKey:
        type: string
        description: The key which is used to map the agent to Portainer
      Extensions:
        type: array
        items:
          $ref: '#/definitions/portainer.EndpointExtension'
      GroupId:
        type: integer
        example: 1
        description: Endpoint group identifier
      Id:
        type: integer
        example: 1
        description: Endpoint Identifier
      Kubernetes:
        description: Associated Kubernetes data
        $ref: '#/definitions/portainer.KubernetesData'
      Name:
        type: string
        example: my-endpoint
        description: Endpoint name
      PublicURL:
        type: string
        example: docker.mydomain.tld:2375
        description: URL or IP address where exposed containers will be reachable
      Snapshots:
        type: array
        description: List of snapshots
        items:
          $ref: '#/definitions/portainer.DockerSnapshot'
      Status:
        type: integer
        example: 1
        description: The status of the endpoint (1 - up, 2 - down)
      TLS:
        type: boolean
        description: |-
          Deprecated fields
          Deprecated in DBVersion == 4
      TLSCACert:
        type: string
      TLSCert:
        type: string
      TLSConfig:
        $ref: '#/definitions/portainer.TLSConfiguration'
      TLSKey:
        type: string
      TagIds:
        type: array
        description: List of tag identifiers to which this endpoint is associated
        items:
          type: integer
          example: 1
          description: Tag identifier
      Tags:
        type: array
        description: Deprecated in DBVersion == 22
        items:
          type: string
      TeamAccessPolicies:
        description: List of team identifiers authorized to connect to this endpoint
        $ref: '#/definitions/portainer.TeamAccessPolicies'
      Type:
        type: integer
        example: 1
        description: Endpoint environment type. 1 for a Docker environment, 2 for an agent on Docker environment or 3 for an Azure environment.
      URL:
        type: string
        example: docker.mydomain.tld:2375
        description: URL or IP address of the Docker host associated to this endpoint
      UserAccessPolicies:
        description: List of user identifiers authorized to connect to this endpoint
        $ref: '#/definitions/portainer.UserAccessPolicies'
  portainer.EndpointAuthorizations:
    type: object
    additionalProperties:
      $ref: '#/definitions/portainer.Authorizations'
  portainer.EndpointExtension:
    type: object
    properties:
      Type:
        type: integer
      URL:
        type: string
  portainer.EndpointGroup:
    type: object
    properties:
      AuthorizedTeams:
        type: array
        items:
          type: integer
      AuthorizedUsers:
        type: array
        description: Deprecated in DBVersion == 18
        items:
          type: integer
          description: |-
            Deprecated fields
            Deprecated in DBVersion == 2
      Description:
        type: string
        example: Endpoint group description
        description: Description associated to the endpoint group
      Id:
        type: integer
        example: 1
        description: Endpoint group Identifier
      Labels:
        type: array
        description: Deprecated fields
        items:
          $ref: '#/definitions/portainer.Pair'
      Name:
        type: string
        example: my-endpoint-group
        description: Endpoint group name
      TagIds:
        type: array
        description: List of tags associated to this endpoint group
        items:
          type: integer
          example: 1
          description: Tag identifier
      Tags:
        type: array
        description: Deprecated in DBVersion == 22
        items:
          type: string
      TeamAccessPolicies:
        $ref: '#/definitions/portainer.TeamAccessPolicies'
      UserAccessPolicies:
        $ref: '#/definitions/portainer.UserAccessPolicies'
  portainer.GitlabRegistryData:
    type: object
    properties:
      InstanceURL:
        type: string
      ProjectId:
        type: integer
      ProjectPath:
        type: string
  portainer.KubernetesConfiguration:
    type: object
    properties:
      IngressClasses:
        type: array
        items:
          $ref: '#/definitions/portainer.KubernetesIngressClassConfig'
      StorageClasses:
        type: array
        items:
          $ref: '#/definitions/portainer.KubernetesStorageClassConfig'
      UseLoadBalancer:
        type: boolean
      UseServerMetrics:
        type: boolean
  portainer.KubernetesData:
    type: object
    properties:
      Configuration:
        $ref: '#/definitions/portainer.KubernetesConfiguration'
      Snapshots:
        type: array
        items:
          $ref: '#/definitions/portainer.KubernetesSnapshot'
  portainer.KubernetesIngressClassConfig:
    type: object
    properties:
      Name:
        type: string
      Type:
        type: string
  portainer.KubernetesSnapshot:
    type: object
    properties:
      KubernetesVersion:
        type: string
      NodeCount:
        type: integer
      Time:
        type: integer
      TotalCPU:
        type: integer
      TotalMemory:
        type: integer
  portainer.KubernetesStorageClassConfig:
    type: object
    properties:
      AccessModes:
        type: array
        items:
          type: string
      AllowVolumeExpansion:
        type: boolean
      Name:
        type: string
      Provisioner:
        type: string
  portainer.LDAPGroupSearchSettings:
    type: object
    properties:
      GroupAttribute:
        type: string
        example: member
        description: LDAP attribute which denotes the group membership
      GroupBaseDN:
        type: string
        example: dc=ldap,dc=domain,dc=tld
        description: The distinguished name of the element from which the LDAP server will search for groups
      GroupFilter:
        type: string
        example: (objectClass=account
        description: The LDAP search filter used to select group elements, optional
  portainer.LDAPSearchSettings:
    type: object
    properties:
      BaseDN:
        type: string
        example: dc=ldap,dc=domain,dc=tld
        description: The distinguished name of the element from which the LDAP server will search for users
      Filter:
        type: string
        example: (objectClass=account)
        description: Optional LDAP search filter used to select user elements
      UserNameAttribute:
        type: string
        example: uid
        description: LDAP attribute which denotes the username
  portainer.LDAPSettings:
    type: object
    properties:
      AnonymousMode:
        type: boolean
        example: true
        description: Enable this option if the server is configured for Anonymous access. When enabled, ReaderDN and Password will not be used
      AutoCreateUsers:
        type: boolean
        example: true
        description: Automatically provision users and assign them to matching LDAP group names
      GroupSearchSettings:
        type: array
        items:
          $ref: '#/definitions/portainer.LDAPGroupSearchSettings'
      Password:
        type: string
        example: readonly-password
        description: Password of the account that will be used to search users
      ReaderDN:
        type: string
        example: cn=readonly-account,dc=ldap,dc=domain,dc=tld
        description: Account that will be used to search for users
      SearchSettings:
        type: array
        items:
          $ref: '#/definitions/portainer.LDAPSearchSettings'
      StartTLS:
        type: boolean
        example: true
        description: Whether LDAP connection should use StartTLS
      TLSConfig:
        $ref: '#/definitions/portainer.TLSConfiguration'
      URL:
        type: string
        example: myldap.domain.tld:389
        description: URL or IP address of the LDAP server
  portainer.OAuthSettings:
    type: object
    properties:
      AccessTokenURI:
        type: string
      AuthorizationURI:
        type: string
      ClientID:
        type: string
      ClientSecret:
        type: string
      DefaultTeamID:
        type: integer
      OAuthAutoCreateUsers:
        type: boolean
      RedirectURI:
        type: string
      ResourceURI:
        type: string
      Scopes:
        type: string
      UserIdentifier:
        type: string
  portainer.Pair:
    type: object
    properties:
      name:
        type: string
        example: name
      value:
        type: string
        example: value
  portainer.Registry:
    type: object
    properties:
      Authentication:
        type: boolean
        example: true
        description: Is authentication against this registry enabled
      AuthorizedTeams:
        type: array
        items:
          type: integer
      AuthorizedUsers:
        type: array
        description: |-
          Deprecated fields
          Deprecated in DBVersion == 18
        items:
          type: integer
          description: |-
            Deprecated fields
            Deprecated in DBVersion == 2
      Gitlab:
        $ref: '#/definitions/portainer.GitlabRegistryData'
      Id:
        type: integer
        example: 1
        description: Registry Identifier
      ManagementConfiguration:
        $ref: '#/definitions/portainer.RegistryManagementConfiguration'
      Name:
        type: string
        example: my-registry
        description: Registry Name
      Password:
        type: string
        example: registry_password
        description: Password used to authenticate against this registry
      TeamAccessPolicies:
        $ref: '#/definitions/portainer.TeamAccessPolicies'
      Type:
        type: integer
        description: Registry Type (1 - Quay, 2 - Azure, 3 - Custom, 4 - Gitlab)
      URL:
        type: string
        example: registry.mydomain.tld:2375
        description: URL or IP address of the Docker registry
      UserAccessPolicies:
        $ref: '#/definitions/portainer.UserAccessPolicies'
      Username:
        type: string
        example: registry user
        description: Username used to authenticate against this registry
  portainer.RegistryManagementConfiguration:
    type: object
    properties:
      Authentication:
        type: boolean
      Password:
        type: string
      TLSConfig:
        $ref: '#/definitions/portainer.TLSConfiguration'
      Type:
        type: integer
      Username:
        type: string
  portainer.ResourceControl:
    type: object
    properties:
      AccessLevel:
        type: integer
      AdministratorsOnly:
        type: boolean
        example: true
        description: Permit access to resource only to admins
      Id:
        type: integer
        example: 1
        description: ResourceControl Identifier
      OwnerId:
        type: integer
        description: |-
          Deprecated fields
          Deprecated in DBVersion == 2
      Public:
        type: boolean
        example: true
        description: Permit access to the associated resource to any user
      ResourceId:
        type: string
        example: 617c5f22bb9b023d6daab7cba43a57576f83492867bc767d1c59416b065e5f08
        description: |-
          Docker resource identifier on which access control will be applied.\
          In the case of a resource control applied to a stack, use the stack name as identifier
      SubResourceIds:
        type: array
        example:
          - 617c5f22bb9b023d6daab7cba43a57576f83492867bc767d1c59416b065e5f08
        description: List of Docker resources that will inherit this access control
        items:
          type: string
      System:
        type: boolean
      TeamAccesses:
        type: array
        items:
          $ref: '#/definitions/portainer.TeamResourceAccess'
      Type:
        type: integer
        example: 1
        description: |-
          Type of Docker resource. Valid values are: 1- container, 2 -service
          3 - volume, 4 - secret, 5 - stack, 6 - config or 7 - custom template
      UserAccesses:
        type: array
        items:
          $ref: '#/definitions/portainer.UserResourceAccess'
  portainer.Role:
    type: object
    properties:
      Authorizations:
        description: Authorizations associated to a role
        $ref: '#/definitions/portainer.Authorizations'
      Description:
        type: string
        example: Read-only access of all resources in an endpoint
        description: Role description
      Id:
        type: integer
        example: 1
        description: Role Identifier
      Name:
        type: string
        example: HelpDesk
        description: Role name
      Priority:
        type: integer
  portainer.Settings:
    type: object
    properties:
      AllowBindMountsForRegularUsers:
        type: boolean
        example: false
        description: Whether non-administrator should be able to use bind mounts when creating containers
      AllowContainerCapabilitiesForRegularUsers:
        type: boolean
        description: Whether non-administrator should be able to use container capabilities
      AllowDeviceMappingForRegularUsers:
        type: boolean
        description: Whether non-administrator should be able to use device mapping
      AllowHostNamespaceForRegularUsers:
        type: boolean
        description: Whether non-administrator should be able to use the host pid
      AllowPrivilegedModeForRegularUsers:
        type: boolean
        example: false
        description: Whether non-administrator should be able to use privileged mode when creating containers
      AllowStackManagementForRegularUsers:
        type: boolean
        description: Whether non-administrator should be able to manage stacks
      AllowVolumeBrowserForRegularUsers:
        type: boolean
        description: Whether non-administrator should be able to browse volumes
      AuthenticationMethod:
        type: integer
        example: 1
        description: 'Active authentication method for the Portainer instance. Valid values are: 1 for internal, 2 for LDAP, or 3 for oauth'
      BlackListedLabels:
        type: array
        description: A list of label name & value that will be used to hide containers when querying containers
        items:
          $ref: '#/definitions/portainer.Pair'
      EdgeAgentCheckinInterval:
        type: integer
        example: 5
        description: The default check in interval for edge agent (in seconds)
      EnableEdgeComputeFeatures:
        type: boolean
        description: Whether edge compute features are enabled
      EnableHostManagementFeatures:
        type: boolean
        description: Whether host management features are enabled
      EnableTelemetry:
        type: boolean
        example: false
        description: Whether telemetry is enabled
      LDAPSettings:
        $ref: '#/definitions/portainer.LDAPSettings'
      LogoURL:
        type: string
        example: https://mycompany.mydomain.tld/logo.png
        description: URL to a logo that will be displayed on the login page as well as on top of the sidebar. Will use default Portainer logo when value is empty string
      OAuthSettings:
        $ref: '#/definitions/portainer.OAuthSettings'
      SnapshotInterval:
        type: string
        example: 5m
        description: The interval in which endpoint snapshots are created
      TemplatesURL:
        type: string
        example: https://raw.githubusercontent.com/portainer/templates/master/templates.json
        description: URL to the templates that will be displayed in the UI when navigating to App Templates
      UserSessionTimeout:
        type: string
        example: 5m
        description: The duration of a user session
      displayDonationHeader:
        type: boolean
        description: Deprecated fields
      displayExternalContributors:
        type: boolean
  portainer.Stack:
    type: object
    properties:
      EndpointId:
        type: integer
        example: 1
        description: Endpoint identifier. Reference the endpoint that will be used for deployment
      EntryPoint:
        type: string
        example: docker-compose.yml
        description: Path to the Stack file
      Env:
        type: array
        description: A list of environment variables used during stack deployment
        items:
          $ref: '#/definitions/portainer.Pair'
      Id:
        type: integer
        example: 1
        description: Stack Identifier
      Name:
        type: string
        example: myStack
        description: Stack name
      ResourceControl:
        $ref: '#/definitions/portainer.ResourceControl'
      Status:
        type: integer
        example: 1
        description: Stack status (1 - active, 2 - inactive)
      SwarmId:
        type: string
        example: jpofkc0i9uo9wtx1zesuk649w
        description: Cluster identifier of the Swarm cluster where the stack is deployed
      Type:
        type: integer
        example: 2
        description: Stack type. 1 for a Swarm stack, 2 for a Compose stack
      createdBy:
        type: string
        example: admin
        description: The username which created this stack
      creationDate:
        type: integer
        example: 1587399600
        description: The date in unix time when stack was created
      projectPath:
        type: string
        example: /data/compose/myStack_jpofkc0i9uo9wtx1zesuk649w
        description: Path on disk to the repository hosting the Stack file
      updateDate:
        type: integer
        example: 1587399600
        description: The date in unix time when stack was last updated
      updatedBy:
        type: string
        example: bob
        description: The username which last updated this stack
  portainer.Status:
    type: object
    properties:
      Version:
        type: string
        example: 2.0.0
        description: Portainer API version
  portainer.TLSConfiguration:
    type: object
    properties:
      TLS:
        type: boolean
        example: true
        description: Use TLS
      TLSCACert:
        type: string
        example: /data/tls/ca.pem
        description: Path to the TLS CA certificate file
      TLSCert:
        type: string
        example: /data/tls/cert.pem
        description: Path to the TLS client certificate file
      TLSKey:
        type: string
        example: /data/tls/key.pem
        description: Path to the TLS client key file
      TLSSkipVerify:
        type: boolean
        example: false
        description: Skip the verification of the server TLS certificate
  portainer.Tag:
    type: object
    properties:
      EndpointGroups:
        type: object
        description: A set of endpoint group ids that have this tag
        additionalProperties:
          type: boolean
      Endpoints:
        type: object
        description: A set of endpoint ids that have this tag
        additionalProperties:
          type: boolean
      Name:
        type: string
        example: org/acme
        description: Tag name
      id:
        type: integer
        example: 1
        description: Tag identifier
  portainer.Team:
    type: object
    properties:
      Id:
        type: integer
        example: 1
        description: Team Identifier
      Name:
        type: string
        example: developers
        description: Team name
  portainer.TeamAccessPolicies:
    type: object
    additionalProperties:
      $ref: '#/definitions/portainer.AccessPolicy'
  portainer.TeamMembership:
    type: object
    properties:
      Id:
        type: integer
        example: 1
        description: Membership Identifier
      Role:
        type: integer
        example: 1
        description: Team role (1 for team leader and 2 for team member)
      TeamID:
        type: integer
        example: 1
        description: Team identifier
      UserID:
        type: integer
        example: 1
        description: User identifier
  portainer.TeamResourceAccess:
    type: object
    properties:
      AccessLevel:
        type: integer
      TeamId:
        type: integer
  portainer.Template:
    type: object
    properties:
      Id:
        type: integer
        example: 1
        description: |-
          Mandatory container/stack fields
          Template Identifier
      administrator_only:
        type: boolean
        example: true
        description: Whether the template should be available to administrators only
      categories:
        type: array
        example:
          - database
        description: A list of categories associated to the template
        items:
          type: string
      command:
        type: string
        example: ls -lah
        description: The command that will be executed in a container template
      description:
        type: string
        example: High performance web server
        description: Description of the template
      env:
        type: array
        description: A list of environment variables used during the template deployment
        items:
          $ref: '#/definitions/portainer.TemplateEnv'
      hostname:
        type: string
        example: mycontainer
        description: Container hostname
      image:
        type: string
        example: nginx:latest
        description: |-
          Mandatory container fields
          Image associated to a container template. Mandatory for a container template
      interactive:
        type: boolean
        example: true
        description: |-
          Whether the container should be started in
          interactive mode (-i -t equivalent on the CLI)
      labels:
        type: array
        description: Container labels
        items:
          $ref: '#/definitions/portainer.Pair'
      logo:
        type: string
        example: https://cloudinovasi.id/assets/img/logos/nginx.png
        description: URL of the template's logo
      name:
        type: string
        example: mystackname
        description: |-
          Optional stack/container fields
          Default name for the stack/container to be used on deployment
      network:
        type: string
        example: mynet
        description: Name of a network that will be used on container deployment if it exists inside the environment
      note:
        type: string
        example: This is my <b>custom</b> template
        description: A note that will be displayed in the UI. Supports HTML content
      platform:
        type: string
        example: linux
        description: |-
          Platform associated to the template.
          Valid values are: 'linux', 'windows' or leave empty for multi-platform
      ports:
        type: array
        example:
          - 8080:80/tcp
        description: A list of ports exposed by the container
        items:
          type: string
      privileged:
        type: boolean
        example: true
        description: Whether the container should be started in privileged mode
      registry:
        type: string
        example: quay.io
        description: |-
          Optional container fields
          The URL of a registry associated to the image for a container template
      repository:
        description: Mandatory stack fields
        $ref: '#/definitions/portainer.TemplateRepository'
      restart_policy:
        type: string
        example: on-failure
        description: Container restart policy
      stackFile:
        type: string
        description: |-
          Mandatory Edge stack fields
          Stack file used for this template
      title:
        type: string
        example: Nginx
        description: Title of the template
      type:
        type: integer
        example: 1
        description: 'Template type. Valid values are: 1 (container), 2 (Swarm stack) or 3 (Compose stack)'
      volumes:
        type: array
        description: A list of volumes used during the container template deployment
        items:
          $ref: '#/definitions/portainer.TemplateVolume'
  portainer.TemplateEnv:
    type: object
    properties:
      default:
        type: string
        example: default_value
        description: Default value that will be set for the variable
      description:
        type: string
        example: MySQL root account password
        description: Content of the tooltip that will be generated in the UI
      label:
        type: string
        example: Root password
        description: Text for the label that will be generated in the UI
      name:
        type: string
        example: MYSQL_ROOT_PASSWORD
        description: name of the environment variable
      preset:
        type: boolean
        example: false
        description: If set to true, will not generate any input for this variable in the UI
      select:
        type: array
        description: A list of name/value that will be used to generate a dropdown in the UI
        items:
          $ref: '#/definitions/portainer.TemplateEnvSelect'
  portainer.TemplateEnvSelect:
    type: object
    properties:
      default:
        type: boolean
        example: false
        description: Will set this choice as the default choice
      text:
        type: string
        example: text value
        description: Some text that will displayed as a choice
      value:
        type: string
        example: value
        description: A value that will be associated to the choice
  portainer.TemplateRepository:
    type: object
    properties:
      stackfile:
        type: string
        example: ./subfolder/docker-compose.yml
        description: Path to the stack file inside the git repository
      url:
        type: string
        example: https://github.com/portainer/portainer-compose
        description: URL of a git repository used to deploy a stack template. Mandatory for a Swarm/Compose stack template
  portainer.TemplateVolume:
    type: object
    properties:
      bind:
        type: string
        example: /tmp
        description: Path on the host
      container:
        type: string
        example: /data
        description: Path inside the container
      readonly:
        type: boolean
        example: true
        description: Whether the volume used should be readonly
  portainer.User:
    type: object
    properties:
      EndpointAuthorizations:
        $ref: '#/definitions/portainer.EndpointAuthorizations'
      Id:
        type: integer
        example: 1
        description: User Identifier
      Password:
        type: string
        example: passwd
      PortainerAuthorizations:
        description: |-
          Deprecated fields
          Deprecated in DBVersion == 25
        $ref: '#/definitions/portainer.Authorizations'
      Role:
        type: integer
        example: 1
        description: User role (1 for administrator account and 2 for regular account)
      Username:
        type: string
        example: bob
  portainer.UserAccessPolicies:
    type: object
    additionalProperties:
      $ref: '#/definitions/portainer.AccessPolicy'
  portainer.UserResourceAccess:
    type: object
    properties:
      AccessLevel:
        type: integer
      UserId:
        type: integer
  portainer.Webhook:
    type: object
    properties:
      EndpointId:
        type: integer
      Id:
        type: integer
        example: 1
        description: Webhook Identifier
      ResourceId:
        type: string
      Token:
        type: string
      Type:
        type: integer
  registries.registryConfigurePayload:
    type: object
    required:
      - authentication
    properties:
      authentication:
        type: boolean
        example: false
        description: Is authentication against this registry enabled
      password:
        type: string
        example: registry_password
        description: Password used to authenticate against this registry. required when Authentication is true
      tls:
        type: boolean
        example: true
        description: Use TLS
      tlscacertFile:
        type: array
        description: The TLS CA certificate file
        items:
          type: integer
      tlscertFile:
        type: array
        description: The TLS client certificate file
        items:
          type: integer
      tlskeyFile:
        type: array
        description: The TLS client key file
        items:
          type: integer
      tlsskipVerify:
        type: boolean
        example: false
        description: Skip the verification of the server TLS certificate
      username:
        type: string
        example: registry_user
        description: Username used to authenticate against this registry. Required when Authentication is true
  registries.registryCreatePayload:
    type: object
    required:
      - authentication
      - name
      - type
      - url
    properties:
      authentication:
        type: boolean
        example: false
        description: Is authentication against this registry enabled
      gitlab:
        description: Gitlab specific details, required when type = 4
        $ref: '#/definitions/portainer.GitlabRegistryData'
      name:
        type: string
        example: my-registry
        description: Name that will be used to identify this registry
      password:
        type: string
        example: registry_password
        description: Password used to authenticate against this registry. required when Authentication is true
      type:
        type: integer
        example: 1
        description: 'Registry Type. Valid values are: 1 (Quay.io), 2 (Azure container registry), 3 (custom registry) or 4 (Gitlab registry)'
      url:
        type: string
        example: registry.mydomain.tld:2375
        description: URL or IP address of the Docker registry
      username:
        type: string
        example: registry_user
        description: Username used to authenticate against this registry. Required when Authentication is true
  registries.registryUpdatePayload:
    type: object
    required:
      - authentication
      - name
      - url
    properties:
      authentication:
        type: boolean
        example: false
        description: Is authentication against this registry enabled
      name:
        type: string
        example: my-registry
        description: Name that will be used to identify this registry
      password:
        type: string
        example: registry_password
        description: Password used to authenticate against this registry. required when Authentication is true
      teamAccessPolicies:
        $ref: '#/definitions/portainer.TeamAccessPolicies'
      url:
        type: string
        example: registry.mydomain.tld:2375
        description: URL or IP address of the Docker registry
      userAccessPolicies:
        $ref: '#/definitions/portainer.UserAccessPolicies'
      username:
        type: string
        example: registry_user
        description: Username used to authenticate against this registry. Required when Authentication is true
  resourcecontrols.resourceControlCreatePayload:
    type: object
    required:
      - resourceID
      - type
    properties:
      administratorsOnly:
        type: boolean
        example: true
        description: Permit access to resource only to admins
      public:
        type: boolean
        example: true
        description: Permit access to the associated resource to any user
      resourceID:
        type: string
        example: 617c5f22bb9b023d6daab7cba43a57576f83492867bc767d1c59416b065e5f08
      subResourceIDs:
        type: array
        example:
          - 617c5f22bb9b023d6daab7cba43a57576f83492867bc767d1c59416b065e5f08
        description: List of Docker resources that will inherit this access control
        items:
          type: string
      teams:
        type: array
        example:
          - 56
          - 7
        description: List of team identifiers with access to the associated resource
        items:
          type: integer
      type:
        type: string
        example: container
        description: |-
          Type of Docker resource. Valid values are: container, volume\
          service, secret, config or stack
      users:
        type: array
        example:
          - 1
          - 4
        description: List of user identifiers with access to the associated resource
        items:
          type: integer
  resourcecontrols.resourceControlUpdatePayload:
    type: object
    properties:
      administratorsOnly:
        type: boolean
        example: true
        description: Permit access to resource only to admins
      public:
        type: boolean
        example: true
        description: Permit access to the associated resource to any user
      teams:
        type: array
        example:
          - 7
        description: List of team identifiers with access to the associated resource
        items:
          type: integer
      users:
        type: array
        example:
          - 4
        description: List of user identifiers with access to the associated resource
        items:
          type: integer
  settings.publicSettingsResponse:
    type: object
    properties:
      AllowBindMountsForRegularUsers:
        type: boolean
        example: true
        description: Whether non-administrator should be able to use bind mounts when creating containers
      AllowContainerCapabilitiesForRegularUsers:
        type: boolean
        example: true
        description: Whether non-administrator should be able to use container capabilities
      AllowDeviceMappingForRegularUsers:
        type: boolean
        example: true
        description: Whether non-administrator should be able to use device mapping
      AllowHostNamespaceForRegularUsers:
        type: boolean
        example: true
        description: Whether non-administrator should be able to use the host pid
      AllowPrivilegedModeForRegularUsers:
        type: boolean
        example: true
        description: Whether non-administrator should be able to use privileged mode when creating containers
      AllowStackManagementForRegularUsers:
        type: boolean
        example: true
        description: Whether non-administrator should be able to manage stacks
      AllowVolumeBrowserForRegularUsers:
        type: boolean
        example: true
        description: Whether non-administrator should be able to browse volumes
      AuthenticationMethod:
        type: integer
        example: 1
        description: 'Active authentication method for the Portainer instance. Valid values are: 1 for internal, 2 for LDAP, or 3 for oauth'
      EnableEdgeComputeFeatures:
        type: boolean
        example: true
        description: Whether edge compute features are enabled
      EnableHostManagementFeatures:
        type: boolean
        example: true
        description: Whether host management features are enabled
      EnableTelemetry:
        type: boolean
        example: true
        description: Whether telemetry is enabled
      LogoURL:
        type: string
        example: https://mycompany.mydomain.tld/logo.png
        description: URL to a logo that will be displayed on the login page as well as on top of the sidebar. Will use default Portainer logo when value is empty string
      OAuthLoginURI:
        type: string
        example: https://gitlab.com/oauth
        description: The URL used for oauth login
  settings.settingsLDAPCheckPayload:
    type: object
    properties:
      ldapsettings:
        $ref: '#/definitions/portainer.LDAPSettings'
  settings.settingsUpdatePayload:
    type: object
    properties:
      allowBindMountsForRegularUsers:
        type: boolean
        example: false
        description: Whether non-administrator should be able to use bind mounts when creating containers
      allowContainerCapabilitiesForRegularUsers:
        type: boolean
        example: true
        description: Whether non-administrator should be able to use container capabilities
      allowDeviceMappingForRegularUsers:
        type: boolean
        example: true
        description: Whether non-administrator should be able to use device mapping
      allowHostNamespaceForRegularUsers:
        type: boolean
        example: true
        description: Whether non-administrator should be able to use the host pid
      allowPrivilegedModeForRegularUsers:
        type: boolean
        example: false
        description: Whether non-administrator should be able to use privileged mode when creating containers
      allowStackManagementForRegularUsers:
        type: boolean
        example: true
        description: Whether non-administrator should be able to manage stacks
      allowVolumeBrowserForRegularUsers:
        type: boolean
        example: true
        description: Whether non-administrator should be able to browse volumes
      authenticationMethod:
        type: integer
        example: 1
        description: 'Active authentication method for the Portainer instance. Valid values are: 1 for internal, 2 for LDAP, or 3 for oauth'
      blackListedLabels:
        type: array
        description: A list of label name & value that will be used to hide containers when querying containers
        items:
          $ref: '#/definitions/portainer.Pair'
      edgeAgentCheckinInterval:
        type: integer
        example: 5
        description: The default check in interval for edge agent (in seconds)
      enableEdgeComputeFeatures:
        type: boolean
        example: true
        description: Whether edge compute features are enabled
      enableHostManagementFeatures:
        type: boolean
        example: true
        description: Whether host management features are enabled
      enableTelemetry:
        type: boolean
        example: false
        description: Whether telemetry is enabled
      ldapsettings:
        $ref: '#/definitions/portainer.LDAPSettings'
      logoURL:
        type: string
        example: https://mycompany.mydomain.tld/logo.png
        description: URL to a logo that will be displayed on the login page as well as on top of the sidebar. Will use default Portainer logo when value is empty string
      oauthSettings:
        $ref: '#/definitions/portainer.OAuthSettings'
      snapshotInterval:
        type: string
        example: 5m
        description: The interval in which endpoint snapshots are created
      templatesURL:
        type: string
        example: https://raw.githubusercontent.com/portainer/templates/master/templates.json
        description: URL to the templates that will be displayed in the UI when navigating to App Templates
      userSessionTimeout:
        type: string
        example: 5m
        description: The duration of a user session
  stacks.composeStackFromFileContentPayload:
    type: object
    required:
      - name
      - stackFileContent
    properties:
      env:
        type: array
        description: A list of environment variables used during stack deployment
        items:
          $ref: '#/definitions/portainer.Pair'
      name:
        type: string
        example: myStack
        description: Name of the stack
      stackFileContent:
        type: string
        example: |-
          version: 3
           services:
           web:
           image:nginx
        description: Content of the Stack file
  stacks.composeStackFromGitRepositoryPayload:
    type: object
    required:
      - name
      - repositoryURL
    properties:
      composeFilePathInRepository:
        type: string
        example: docker-compose.yml
        description: Path to the Stack file inside the Git repository
        default: docker-compose.yml
      env:
        type: array
        description: A list of environment variables used during stack deployment
        items:
          $ref: '#/definitions/portainer.Pair'
      name:
        type: string
        example: myStack
        description: Name of the stack
      repositoryAuthentication:
        type: boolean
        example: true
        description: Use basic authentication to clone the Git repository
      repositoryPassword:
        type: string
        example: myGitPassword
        description: Password used in basic authentication. Required when RepositoryAuthentication is true.
      repositoryReferenceName:
        type: string
        example: refs/heads/master
        description: Reference name of a Git repository hosting the Stack file
      repositoryURL:
        type: string
        example: https://github.com/openfaas/faas
        description: URL of a Git repository hosting the Stack file
      repositoryUsername:
        type: string
        example: myGitUsername
        description: Username used in basic authentication. Required when RepositoryAuthentication is true.
  stacks.stackFileResponse:
    type: object
    properties:
      StackFileContent:
        type: string
        example: |-
          version: 3
           services:
           web:
           image:nginx
        description: Content of the Stack file
  stacks.stackMigratePayload:
    type: object
    required:
      - endpointID
    properties:
      endpointID:
        type: integer
        example: 2
        description: Endpoint identifier of the target endpoint where the stack will be relocated
      name:
        type: string
        example: new-stack
        description: If provided will rename the migrated stack
      swarmID:
        type: string
        example: jpofkc0i9uo9wtx1zesuk649w
        description: Swarm cluster identifier, must match the identifier of the cluster where the stack will be relocated
  stacks.swarmStackFromFileContentPayload:
    type: object
    required:
      - name
      - stackFileContent
      - swarmID
    properties:
      env:
        type: array
        description: A list of environment variables used during stack deployment
        items:
          $ref: '#/definitions/portainer.Pair'
      name:
        type: string
        example: myStack
        description: Name of the stack
      stackFileContent:
        type: string
        example: |-
          version: 3
           services:
           web:
           image:nginx
        description: Content of the Stack file
      swarmID:
        type: string
        example: jpofkc0i9uo9wtx1zesuk649w
        description: Swarm cluster identifier
  stacks.swarmStackFromGitRepositoryPayload:
    type: object
    required:
      - name
      - repositoryURL
      - swarmID
    properties:
      composeFilePathInRepository:
        type: string
        example: docker-compose.yml
        description: Path to the Stack file inside the Git repository
        default: docker-compose.yml
      env:
        type: array
        description: A list of environment variables used during stack deployment
        items:
          $ref: '#/definitions/portainer.Pair'
      name:
        type: string
        example: myStack
        description: Name of the stack
      repositoryAuthentication:
        type: boolean
        example: true
        description: Use basic authentication to clone the Git repository
      repositoryPassword:
        type: string
        example: myGitPassword
        description: Password used in basic authentication. Required when RepositoryAuthentication is true.
      repositoryReferenceName:
        type: string
        example: refs/heads/master
        description: Reference name of a Git repository hosting the Stack file
      repositoryURL:
        type: string
        example: https://github.com/openfaas/faas
        description: URL of a Git repository hosting the Stack file
      repositoryUsername:
        type: string
        example: myGitUsername
        description: Username used in basic authentication. Required when RepositoryAuthentication is true.
      swarmID:
        type: string
        example: jpofkc0i9uo9wtx1zesuk649w
        description: Swarm cluster identifier
  stacks.updateSwarmStackPayload:
    type: object
    properties:
      env:
        type: array
        description: A list of environment variables used during stack deployment
        items:
          $ref: '#/definitions/portainer.Pair'
      prune:
        type: boolean
        example: true
        description: Prune services that are no longer referenced (only available for Swarm stacks)
      stackFileContent:
        type: string
        example: |-
          version: 3
           services:
           web:
           image:nginx
        description: New content of the Stack file
  status.inspectVersionResponse:
    type: object
    properties:
      LatestVersion:
        type: string
        example: 2.0.0
        description: The latest version available
      UpdateAvailable:
        type: boolean
        example: false
        description: Whether portainer has an update available
  tags.tagCreatePayload:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: org/acme
        description: Name
  teammemberships.teamMembershipCreatePayload:
    type: object
    required:
      - role
      - teamID
      - userID
    properties:
      role:
        type: integer
        example: 1
        description: Role for the user inside the team (1 for leader and 2 for regular member)
      teamID:
        type: integer
        example: 1
        description: Team identifier
      userID:
        type: integer
        example: 1
        description: User identifier
  teammemberships.teamMembershipUpdatePayload:
    type: object
    required:
      - role
      - teamID
      - userID
    properties:
      role:
        type: integer
        example: 1
        description: Role for the user inside the team (1 for leader and 2 for regular member)
      teamID:
        type: integer
        example: 1
        description: Team identifier
      userID:
        type: integer
        example: 1
        description: User identifier
  teams.teamCreatePayload:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: developers
        description: Name
  teams.teamUpdatePayload:
    type: object
    properties:
      name:
        type: string
        example: developers
        description: Name
  templates.filePayload:
    type: object
    required:
      - composeFilePathInRepository
      - repositoryURL
    properties:
      composeFilePathInRepository:
        type: string
        example: ./subfolder/docker-compose.yml
        description: Path to the file inside the git repository
      repositoryURL:
        type: string
        example: https://github.com/portainer/portainer-compose
        description: URL of a git repository where the file is stored
  templates.fileResponse:
    type: object
    properties:
      fileContent:
        type: string
        description: The requested file content
  templates.listResponse:
    type: object
    properties:
      templates:
        type: array
        items:
          $ref: '#/definitions/portainer.Template'
      version:
        type: string
  users.adminInitPayload:
    type: object
    required:
      - password
      - username
    properties:
      password:
        type: string
        example: admin-password
        description: Password for the admin user
      username:
        type: string
        example: admin
        description: Username for the admin user
  users.userCreatePayload:
    type: object
    required:
      - password
      - role
      - username
    properties:
      password:
        type: string
        example: cg9Wgky3
      role:
        type: integer
        example: 2
        description: User role (1 for administrator account and 2 for regular account)
      username:
        type: string
        example: bob
  users.userUpdatePasswordPayload:
    type: object
    required:
      - newPassword
      - password
    properties:
      newPassword:
        type: string
        example: new_passwd
        description: New Password
      password:
        type: string
        example: passwd
        description: Current Password
  users.userUpdatePayload:
    type: object
    required:
      - password
      - role
      - username
    properties:
      password:
        type: string
        example: cg9Wgky3
      role:
        type: integer
        example: 2
        description: User role (1 for administrator account and 2 for regular account)
      username:
        type: string
        example: bob
  webhooks.webhookCreatePayload:
    type: object
    properties:
      endpointID:
        type: integer
      resourceID:
        type: string
      webhookType:
        type: integer